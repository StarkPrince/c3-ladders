{"message": "Ladder fetched", "data": [{"_id": "6202a62232380906ee1b2672", "index": "E", "name": "Replace the Numbers", "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "rating": 1900, "frequency": 1563, "__v": 0, "contestId": "1620"}, {"_id": "6202a62232380906ee1b2420", "index": "D", "name": "Not Adding", "tags": ["brute force", "dp", "math", "number theory"], "rating": 1900, "frequency": 1510, "__v": 0, "contestId": "1627"}, {"_id": "6202a62032380906ee1b1bc0", "index": "B2", "name": "Palindrome Game (hard version)", "tags": ["constructive algorithms", "games"], "rating": 1900, "frequency": 1260, "__v": 0, "contestId": "1527"}, {"_id": "6202a62332380906ee1b26c7", "index": "C", "name": "Dijkstra?", "tags": ["graphs", "shortest paths"], "rating": 1900, "frequency": 1170, "__v": 0, "contestId": "20"}, {"_id": "6202a62032380906ee1b1c0c", "index": "C2", "name": "Guessing the Greatest (hard version)", "tags": ["binary search", "interactive"], "rating": 1900, "frequency": 1092, "__v": 0, "contestId": "1486"}, {"_id": "6202a61f32380906ee1b1831", "index": "F1", "name": "Nearest Beautiful Number (easy version)", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "dfs and similar", "greedy"], "rating": 1900, "frequency": 1061, "__v": 0, "contestId": "1560"}, {"_id": "6202a61c32380906ee1b13d0", "index": "D", "name": "Replace by MEX", "tags": ["brute force", "constructive algorithms", "sortings"], "rating": 1900, "frequency": 1002, "__v": 0, "contestId": "1375"}, {"_id": "6202a62232380906ee1b23f3", "index": "C", "name": "Need for Pink Slips", "tags": ["bitmasks", "brute force", "dfs and similar", "implementation", "math", "probabilities"], "rating": 1900, "frequency": 974, "__v": 0, "contestId": "1543"}, {"_id": "6202a62232380906ee1b23f0", "index": "F", "name": "Array Stabilization (GCD version)", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "rating": 1900, "frequency": 909, "__v": 0, "contestId": "1547"}, {"_id": "6202a61e32380906ee1b16f2", "index": "D", "name": "TediousLee", "tags": ["dp", "graphs", "greedy", "math", "trees"], "rating": 1900, "frequency": 906, "__v": 0, "contestId": "1369"}, {"_id": "6202a62332380906ee1b28b1", "index": "G", "name": "MinOr Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy"], "rating": 1900, "frequency": 892, "__v": 0, "contestId": "1624"}, {"_id": "6202a62032380906ee1b1bdd", "index": "F", "name": "Education", "tags": ["brute force", "dp", "greedy", "implementation"], "rating": 1900, "frequency": 891, "__v": 0, "contestId": "1512"}, {"_id": "6202a61e32380906ee1b1714", "index": "E", "name": "Maximum Subsequence Value", "tags": ["brute force", "constructive algorithms"], "rating": 1900, "frequency": 869, "__v": 0, "contestId": "1365"}, {"_id": "6202a61f32380906ee1b179a", "index": "D", "name": "Phoenix and Science", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "rating": 1900, "frequency": 849, "__v": 0, "contestId": "1348"}, {"_id": "6202a61f32380906ee1b174c", "index": "D", "name": "The Best Vacation", "tags": ["binary search", "brute force", "greedy", "implementation", "two pointers"], "rating": 1900, "frequency": 832, "__v": 0, "contestId": "1358"}, {"_id": "6202a62132380906ee1b1eb5", "index": "C", "name": "Three Bags", "tags": ["constructive algorithms", "greedy"], "rating": 1900, "frequency": 828, "__v": 0, "contestId": "1467"}, {"_id": "6202a62032380906ee1b1b0f", "index": "D", "name": "Zigzags", "tags": ["brute force", "combinatorics", "data structures", "math", "two pointers"], "rating": 1900, "frequency": 823, "__v": 0, "contestId": "1400"}, {"_id": "6202a61f32380906ee1b176b", "index": "D", "name": "Multiset", "tags": ["binary search", "data structures"], "rating": 1900, "frequency": 821, "__v": 0, "contestId": "1354"}, {"_id": "6202a62332380906ee1b2964", "index": "D2", "name": "Half of Same", "tags": ["brute force", "math", "number theory"], "rating": 1900, "frequency": 795, "__v": 0, "contestId": "1593"}, {"_id": "6202a61d32380906ee1b1571", "index": "G", "name": "Strange Beauty", "tags": ["dp", "math", "number theory", "sortings"], "rating": 1900, "frequency": 780, "__v": 0, "contestId": "1475"}, {"_id": "6202a61f32380906ee1b17b4", "index": "E", "name": "Tree Queries", "tags": ["dfs and similar", "graphs", "trees"], "rating": 1900, "frequency": 770, "__v": 0, "contestId": "1328"}, {"_id": "6202a62032380906ee1b1c07", "index": "D", "name": "Genius's Gambit", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "rating": 1900, "frequency": 759, "__v": 0, "contestId": "1492"}, {"_id": "6202a62232380906ee1b2450", "index": "D", "name": "MEX Sequences", "tags": ["dp", "math"], "rating": 1900, "frequency": 757, "__v": 0, "contestId": "1613"}, {"_id": "6202a62032380906ee1b1972", "index": "G", "name": "A/B Matrix", "tags": ["constructive algorithms", "greedy", "math"], "rating": 1900, "frequency": 748, "__v": 0, "contestId": "1360"}, {"_id": "6202a62232380906ee1b2229", "index": "D", "name": "Yet Another Sorting Problem", "tags": ["constructive algorithms", "data structures", "math", "sortings"], "rating": 1900, "frequency": 726, "__v": 0, "contestId": "1591"}, {"_id": "6202a62132380906ee1b206b", "index": "C", "name": "1D Sokoban", "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "rating": 1900, "frequency": 699, "__v": 0, "contestId": "1494"}, {"_id": "6202a62132380906ee1b207a", "index": "G", "name": "Old Floppy Drive ", "tags": ["binary search", "data structures", "math"], "rating": 1900, "frequency": 696, "__v": 0, "contestId": "1490"}, {"_id": "6202a62032380906ee1b197b", "index": "E", "name": "K-periodic Garland", "tags": ["brute force", "dp", "greedy"], "rating": 1900, "frequency": 686, "__v": 0, "contestId": "1353"}, {"_id": "6202a61d32380906ee1b1572", "index": "F", "name": "Unusual Matrix", "tags": ["2-sat", "brute force", "constructive algorithms"], "rating": 1900, "frequency": 686, "__v": 0, "contestId": "1475"}, {"_id": "6202a62732380906ee1b3c39", "index": "D", "name": "AquaMoon and Chess", "tags": ["combinatorics", "math"], "rating": 1900, "frequency": 654, "__v": 0, "contestId": "1546"}, {"_id": "6202a62032380906ee1b1989", "index": "D", "name": "Multiple Testcases", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "rating": 1900, "frequency": 645, "__v": 0, "contestId": "1342"}, {"_id": "6202a62232380906ee1b2456", "index": "E2", "name": "Escape The Maze (hard version)", "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "rating": 1900, "frequency": 642, "__v": 0, "contestId": "1611"}, {"_id": "6202a62032380906ee1b1adf", "index": "E", "name": "String Reversal", "tags": ["data structures", "greedy", "strings"], "rating": 1900, "frequency": 624, "__v": 0, "contestId": "1430"}, {"_id": "6202a62032380906ee1b1a85", "index": "E", "name": "Necklace Assembly", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"], "rating": 1900, "frequency": 619, "__v": 0, "contestId": "1367"}, {"_id": "6202a62232380906ee1b2256", "index": "D", "name": "Inconvenient Pairs", "tags": ["binary search", "data structures", "implementation", "sortings", "two pointers"], "rating": 1900, "frequency": 614, "__v": 0, "contestId": "1569"}, {"_id": "6202a61e32380906ee1b1702", "index": "E1", "name": "Asterism (Easy Version)", "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "sortings"], "rating": 1900, "frequency": 613, "__v": 0, "contestId": "1371"}, {"_id": "6202a61f32380906ee1b1820", "index": "D", "name": "Fill The Bag", "tags": ["bitmasks", "greedy"], "rating": 1900, "frequency": 609, "__v": 0, "contestId": "1303"}, {"_id": "6202a61d32380906ee1b143e", "index": "C2", "name": "Skyscrapers (hard version)", "tags": ["data structures", "dp", "greedy"], "rating": 1900, "frequency": 603, "__v": 0, "contestId": "1313"}, {"_id": "6202a62032380906ee1b1ac4", "index": "D", "name": "Bandit in a City", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "rating": 1900, "frequency": 602, "__v": 0, "contestId": "1436"}, {"_id": "6202a62532380906ee1b31fa", "index": "D1", "name": "Painting the Array I", "tags": ["data structures", "dp", "greedy", "implementation"], "rating": 1900, "frequency": 595, "__v": 0, "contestId": "1480"}, {"_id": "6202a61d32380906ee1b156d", "index": "D", "name": "Cow and Fields", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"], "rating": 1900, "frequency": 579, "__v": 0, "contestId": "1307"}, {"_id": "6202a62532380906ee1b3218", "index": "D", "name": "Binary Literature", "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "rating": 1900, "frequency": 547, "__v": 0, "contestId": "1509"}, {"_id": "6202a61d32380906ee1b14f4", "index": "D", "name": "Bouncing Boomerangs", "tags": ["constructive algorithms", "greedy", "implementation"], "rating": 1900, "frequency": 510, "__v": 0, "contestId": "1428"}, {"_id": "6202a62032380906ee1b1a2e", "index": "D", "name": "Pairs", "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "rating": 1900, "frequency": 510, "__v": 0, "contestId": "1463"}, {"_id": "6202a62432380906ee1b30dc", "index": "C", "name": "Longest Regular Bracket Sequence", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"], "rating": 1900, "frequency": 507, "__v": 0, "contestId": "5"}, {"_id": "6202a62032380906ee1b1a40", "index": "D", "name": "Checkpoints", "tags": ["brute force", "constructive algorithms", "greedy", "math", "probabilities"], "rating": 1900, "frequency": 484, "__v": 0, "contestId": "1453"}, {"_id": "6202a62032380906ee1b1ad7", "index": "D", "name": "Hexagons", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "shortest paths"], "rating": 1900, "frequency": 481, "__v": 0, "contestId": "1421"}, {"_id": "6202a62432380906ee1b30d9", "index": "D", "name": "Roads not only in Berland", "tags": ["dsu", "graphs", "trees"], "rating": 1900, "frequency": 479, "__v": 0, "contestId": "25"}, {"_id": "6202a62532380906ee1b3291", "index": "D", "name": "Strange Definition", "tags": ["bitmasks", "graphs", "hashing", "math", "number theory"], "rating": 1900, "frequency": 462, "__v": 0, "contestId": "1471"}, {"_id": "6202a62532380906ee1b3250", "index": "D", "name": "Let's Go Hiking", "tags": ["games"], "rating": 1900, "frequency": 448, "__v": 0, "contestId": "1496"}, {"_id": "6202a61e32380906ee1b16e9", "index": "B1", "name": "Koa and the Beach (Easy Version)", "tags": ["brute force", "dp", "greedy"], "rating": 1900, "frequency": 444, "__v": 0, "contestId": "1384"}, {"_id": "6202a61d32380906ee1b146f", "index": "D", "name": "Kuroni and the Celebration", "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "rating": 1900, "frequency": 439, "__v": 0, "contestId": "1305"}, {"_id": "6202a61c32380906ee1b13bc", "index": "B", "name": "GameGame", "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"], "rating": 1900, "frequency": 435, "__v": 0, "contestId": "1383"}, {"_id": "6202a62732380906ee1b408b", "index": "D", "name": "Frog Traveler", "tags": ["data structures", "dp", "graphs", "greedy", "shortest paths"], "rating": 1900, "frequency": 402, "__v": 0, "contestId": "1602"}, {"_id": "6202a62532380906ee1b345f", "index": "B", "name": "Modulo Sum", "tags": ["combinatorics", "data structures", "dp", "two pointers"], "rating": 1900, "frequency": 386, "__v": 0, "contestId": "577"}, {"_id": "6202a62332380906ee1b26ba", "index": "E", "name": "Enemy is weak", "tags": ["data structures", "trees"], "rating": 1900, "frequency": 385, "__v": 0, "contestId": "61"}, {"_id": "6202a62632380906ee1b3804", "index": "D", "name": "Tree Tag", "tags": ["constructive algorithms", "dfs and similar", "dp", "games", "strings", "trees"], "rating": 1900, "frequency": 381, "__v": 0, "contestId": "1405"}, {"_id": "6202a62532380906ee1b365e", "index": "C", "name": "Gargari and Bishops", "tags": ["greedy", "hashing", "implementation"], "rating": 1900, "frequency": 375, "__v": 0, "contestId": "463"}, {"_id": "6202a61d32380906ee1b1493", "index": "B1", "name": "Painting the Array I", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "rating": 1900, "frequency": 371, "__v": 0, "contestId": "1479"}, {"_id": "6202a61e32380906ee1b1621", "index": "A", "name": "Binary Literature", "tags": ["constructive algorithms", "greedy", "implementation", "strings", "two pointers"], "rating": 1900, "frequency": 371, "__v": 0, "contestId": "1508"}, {"_id": "6202a62432380906ee1b2f53", "index": "D", "name": "Divide and Sum", "tags": ["combinatorics", "math", "sortings"], "rating": 1900, "frequency": 369, "__v": 0, "contestId": "1445"}, {"_id": "6202a61d32380906ee1b14ea", "index": "B", "name": "Divide and Sum", "tags": ["combinatorics", "math", "sortings"], "rating": 1900, "frequency": 365, "__v": 0, "contestId": "1444"}, {"_id": "6202a62432380906ee1b2f3f", "index": "D", "name": "Dr. Evil Underscores", "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "rating": 1900, "frequency": 358, "__v": 0, "contestId": "1285"}, {"_id": "6202a62632380906ee1b366d", "index": "D2", "name": "Up the Strip", "tags": ["brute force", "dp", "math", "number theory"], "rating": 1900, "frequency": 357, "__v": 0, "contestId": "1561"}, {"_id": "6202a61d32380906ee1b14b0", "index": "B", "name": "Strange Definition", "tags": ["bitmasks", "graphs", "hashing", "math", "number theory"], "rating": 1900, "frequency": 355, "__v": 0, "contestId": "1470"}, {"_id": "6202a62632380906ee1b3a18", "index": "C2", "name": "Binary Table (Hard Version)", "tags": ["constructive algorithms", "implementation"], "rating": 1900, "frequency": 343, "__v": 0, "contestId": "1440"}, {"_id": "6202a62432380906ee1b2cb1", "index": "E", "name": "Nearest Opposite Parity", "tags": ["dfs and similar", "graphs", "shortest paths"], "rating": 1900, "frequency": 336, "__v": 0, "contestId": "1272"}, {"_id": "6202a61f32380906ee1b17fc", "index": "F", "name": "Moving Points", "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "rating": 1900, "frequency": 332, "__v": 0, "contestId": "1311"}, {"_id": "6202a61f32380906ee1b1854", "index": "B", "name": "AquaMoon and Chess", "tags": ["combinatorics", "math"], "rating": 1900, "frequency": 329, "__v": 0, "contestId": "1545"}, {"_id": "6202a62532380906ee1b31a8", "index": "C", "name": "Classy Numbers", "tags": ["combinatorics", "dp"], "rating": 1900, "frequency": 316, "__v": 0, "contestId": "1036"}, {"_id": "6202a62532380906ee1b3528", "index": "D", "name": "Beautiful Array", "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "rating": 1900, "frequency": 316, "__v": 0, "contestId": "1155"}, {"_id": "6202a61b32380906ee1b13a9", "index": "B", "name": "Tree Tag", "tags": ["dfs and similar", "dp", "games", "trees"], "rating": 1900, "frequency": 298, "__v": 0, "contestId": "1404"}, {"_id": "6202a62432380906ee1b2ec4", "index": "F", "name": "Tree with Maximum Cost", "tags": ["dfs and similar", "dp", "trees"], "rating": 1900, "frequency": 297, "__v": 0, "contestId": "1092"}, {"_id": "6202a62232380906ee1b21c0", "index": "C", "name": "Perform Easily", "tags": ["brute force", "data structures", "dp", "sortings", "two pointers"], "rating": 1900, "frequency": 296, "__v": 0, "contestId": "1435"}, {"_id": "6202a62132380906ee1b1fad", "index": "B", "name": "Zuma", "tags": ["dp"], "rating": 1900, "frequency": 295, "__v": 0, "contestId": "607"}, {"_id": "6202a61e32380906ee1b1636", "index": "B", "name": "Let's Go Hiking", "tags": ["games", "greedy"], "rating": 1900, "frequency": 293, "__v": 0, "contestId": "1495"}, {"_id": "6202a62032380906ee1b1953", "index": "B", "name": "Frog Traveler", "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"], "rating": 1900, "frequency": 288, "__v": 0, "contestId": "1601"}, {"_id": "6202a61d32380906ee1b149f", "index": "B", "name": "Nezzar and Binary String", "tags": ["data structures", "greedy"], "rating": 1900, "frequency": 287, "__v": 0, "contestId": "1477"}, {"_id": "6202a61c32380906ee1b13ee", "index": "B", "name": "Johnny and Grandmaster", "tags": ["greedy", "implementation", "math", "sortings"], "rating": 1900, "frequency": 280, "__v": 0, "contestId": "1361"}, {"_id": "6202a62632380906ee1b3a92", "index": "E", "name": "Array Game", "tags": ["games", "greedy", "two pointers"], "rating": 1900, "frequency": 271, "__v": 0, "contestId": "1600"}, {"_id": "6202a62432380906ee1b2c11", "index": "D", "name": "Array Division", "tags": ["binary search", "data structures", "implementation"], "rating": 1900, "frequency": 269, "__v": 0, "contestId": "808"}, {"_id": "6202a62232380906ee1b2181", "index": "C", "name": "Painting Fence", "tags": ["divide and conquer", "dp", "greedy"], "rating": 1900, "frequency": 267, "__v": 0, "contestId": "448"}, {"_id": "6202a61b32380906ee1b1383", "index": "A2", "name": "Binary Table (Hard Version)", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "rating": 1900, "frequency": 258, "__v": 0, "contestId": "1439"}, {"_id": "6202a62032380906ee1b1c02", "index": "E", "name": "XOR Guessing", "tags": ["bitmasks", "interactive", "math"], "rating": 1900, "frequency": 253, "__v": 0, "contestId": "1207"}, {"_id": "6202a62432380906ee1b2f45", "index": "E", "name": "Obtain a Permutation", "tags": ["greedy", "implementation", "math"], "rating": 1900, "frequency": 245, "__v": 0, "contestId": "1294"}, {"_id": "6202a62132380906ee1b1daa", "index": "D", "name": "AB-string", "tags": ["binary search", "combinatorics", "dp", "strings"], "rating": 1900, "frequency": 243, "__v": 0, "contestId": "1238"}, {"_id": "6202a61f32380906ee1b1825", "index": "D", "name": "Salary Changing", "tags": ["binary search", "greedy", "sortings"], "rating": 1900, "frequency": 240, "__v": 0, "contestId": "1251"}, {"_id": "6202a62332380906ee1b2aaf", "index": "D", "name": "Shichikuji and Power Grid", "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"], "rating": 1900, "frequency": 239, "__v": 0, "contestId": "1245"}, {"_id": "6202a62132380906ee1b1f42", "index": "B", "name": "Mike and Feet", "tags": ["binary search", "data structures", "dp", "dsu"], "rating": 1900, "frequency": 237, "__v": 0, "contestId": "547"}, {"_id": "6202a62032380906ee1b196d", "index": "B", "name": "Up the Strip", "tags": ["brute force", "dp", "math", "number theory", "two pointers"], "rating": 1900, "frequency": 236, "__v": 0, "contestId": "1558"}, {"_id": "6202a62732380906ee1b3d0f", "index": "D", "name": "Playlist", "tags": ["data structures", "dsu", "implementation"], "rating": 1900, "frequency": 233, "__v": 0, "contestId": "1484"}, {"_id": "6202a62232380906ee1b2637", "index": "D", "name": "Flood Fill", "tags": ["dp"], "rating": 1900, "frequency": 231, "__v": 0, "contestId": "1114"}, {"_id": "6202a62332380906ee1b2b87", "index": "C", "name": "Magic Ship", "tags": ["binary search"], "rating": 1900, "frequency": 226, "__v": 0, "contestId": "1117"}, {"_id": "6202a62332380906ee1b26c0", "index": "D", "name": "Gargari and Permutations", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "rating": 1900, "frequency": 222, "__v": 0, "contestId": "463"}, {"_id": "6202a62532380906ee1b3196", "index": "C", "name": "Pashmak and Buses", "tags": ["combinatorics", "constructive algorithms", "math"], "rating": 1900, "frequency": 221, "__v": 0, "contestId": "459"}, {"_id": "6202a62432380906ee1b2caa", "index": "E", "name": "Two Small Strings", "tags": ["brute force", "constructive algorithms"], "rating": 1900, "frequency": 219, "__v": 0, "contestId": "1213"}, {"_id": "6202a62432380906ee1b3071", "index": "D", "name": "Print a 1337-string...", "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "rating": 1900, "frequency": 216, "__v": 0, "contestId": "1202"}, {"_id": "6202a62532380906ee1b31c2", "index": "D", "name": "Array Splitting", "tags": ["greedy", "sortings"], "rating": 1900, "frequency": 216, "__v": 0, "contestId": "1175"}, {"_id": "6202a62332380906ee1b2ac7", "index": "F", "name": "Make It Connected", "tags": ["dsu", "graphs", "greedy"], "rating": 1900, "frequency": 215, "__v": 0, "contestId": "1095"}, {"_id": "6202a62132380906ee1b2167", "index": "C", "name": "Fools and Roads", "tags": ["data structures", "dfs and similar", "trees"], "rating": 1900, "frequency": 211, "__v": 0, "contestId": "191"}, {"_id": "6202a61f32380906ee1b1819", "index": "B", "name": "0-1 MST", "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "rating": 1900, "frequency": 207, "__v": 0, "contestId": "1242"}, {"_id": "6202a61f32380906ee1b18eb", "index": "C", "name": "Perform Easily", "tags": ["binary search", "brute force", "dp", "implementation", "sortings", "two pointers"], "rating": 1900, "frequency": 202, "__v": 0, "contestId": "1413"}, {"_id": "6202a62732380906ee1b3e34", "index": "C", "name": "Roads in Berland", "tags": ["graphs", "shortest paths"], "rating": 1900, "frequency": 200, "__v": 0, "contestId": "25"}, {"_id": "6202a62532380906ee1b31cb", "index": "D", "name": "Yet Another Subarray Problem", "tags": ["dp", "greedy", "math"], "rating": 1900, "frequency": 199, "__v": 0, "contestId": "1197"}, {"_id": "6202a62232380906ee1b2641", "index": "D", "name": "Ehab and the Expected XOR Problem", "tags": ["bitmasks", "constructive algorithms"], "rating": 1900, "frequency": 193, "__v": 0, "contestId": "1174"}, {"_id": "6202a62432380906ee1b3016", "index": "D", "name": "GameGame", "tags": ["bitmasks", "constructive algorithms", "games", "math"], "rating": 1900, "frequency": 193, "__v": 0, "contestId": "1384"}, {"_id": "6202a62032380906ee1b19d0", "index": "D", "name": "Equalize the Remainders", "tags": ["data structures", "greedy", "implementation"], "rating": 1900, "frequency": 189, "__v": 0, "contestId": "999"}, {"_id": "6202a62332380906ee1b2801", "index": "C", "name": "Maximal GCD", "tags": ["constructive algorithms", "greedy", "math"], "rating": 1900, "frequency": 184, "__v": 0, "contestId": "803"}, {"_id": "6202a61f32380906ee1b1843", "index": "B", "name": "Playlist", "tags": ["data structures", "dsu", "implementation"], "rating": 1900, "frequency": 183, "__v": 0, "contestId": "1483"}, {"_id": "6202a62032380906ee1b19ee", "index": "F2", "name": "Same Sum Blocks (Hard)", "tags": ["data structures", "greedy"], "rating": 1900, "frequency": 182, "__v": 0, "contestId": "1141"}, {"_id": "6202a62532380906ee1b3206", "index": "E", "name": "Fish", "tags": ["bitmasks", "dp", "probabilities"], "rating": 1900, "frequency": 176, "__v": 0, "contestId": "16"}, {"_id": "6202a62232380906ee1b24ed", "index": "E", "name": "Pashmak and Graph", "tags": ["dp", "sortings"], "rating": 1900, "frequency": 175, "__v": 0, "contestId": "459"}, {"_id": "6202a62132380906ee1b206f", "index": "F1", "name": "Same Sum Blocks (Easy)", "tags": ["greedy"], "rating": 1900, "frequency": 173, "__v": 0, "contestId": "1141"}, {"_id": "6202a61f32380906ee1b1786", "index": "D", "name": "Treasure Island", "tags": ["dfs and similar", "dp", "flows", "hashing"], "rating": 1900, "frequency": 168, "__v": 0, "contestId": "1214"}, {"_id": "6202a62432380906ee1b2ef5", "index": "E1", "name": "Numerical Sequence (easy version)", "tags": ["binary search", "brute force", "math"], "rating": 1900, "frequency": 168, "__v": 0, "contestId": "1216"}, {"_id": "6202a62432380906ee1b2ebb", "index": "F1", "name": "Pictures with Kittens (easy version)", "tags": ["dp"], "rating": 1900, "frequency": 167, "__v": 0, "contestId": "1077"}, {"_id": "6202a62032380906ee1b1b64", "index": "B", "name": "Shortest Cycle", "tags": ["bitmasks", "brute force", "graphs", "shortest paths"], "rating": 1900, "frequency": 165, "__v": 0, "contestId": "1205"}, {"_id": "6202a62432380906ee1b304d", "index": "D", "name": "Complete Tripartite", "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"], "rating": 1900, "frequency": 163, "__v": 0, "contestId": "1228"}, {"_id": "6202a62532380906ee1b31d5", "index": "D", "name": "A Game with Traps", "tags": ["binary search", "dp", "greedy", "sortings"], "rating": 1900, "frequency": 162, "__v": 0, "contestId": "1260"}, {"_id": "6202a62332380906ee1b26ab", "index": "E", "name": "Pavel and Triangles", "tags": ["brute force", "dp", "fft", "greedy", "ternary search"], "rating": 1900, "frequency": 159, "__v": 0, "contestId": "1119"}]}