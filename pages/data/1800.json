{"message": "Ladder fetched", "data": [{"_id": "6202a61f32380906ee1b1847", "index": "D", "name": "Diane", "tags": ["constructive algorithms", "greedy", "strings"], "rating": 1800, "frequency": 1664, "__v": 0, "contestId": "1554"}, {"_id": "6202a62332380906ee1b289f", "index": "C", "name": "The Sports Festival", "tags": ["dp", "greedy"], "rating": 1800, "frequency": 1644, "__v": 0, "contestId": "1509"}, {"_id": "6202a61f32380906ee1b1846", "index": "C", "name": "Mikasa", "tags": ["binary search", "bitmasks", "greedy", "implementation"], "rating": 1800, "frequency": 1487, "__v": 0, "contestId": "1554"}, {"_id": "6202a61f32380906ee1b1874", "index": "D", "name": "Armchairs", "tags": ["dp", "flows", "graph matchings", "greedy"], "rating": 1800, "frequency": 1471, "__v": 0, "contestId": "1525"}, {"_id": "6202a61f32380906ee1b1830", "index": "E", "name": "Polycarp and String Transformation", "tags": ["binary search", "implementation", "sortings", "strings"], "rating": 1800, "frequency": 1312, "__v": 0, "contestId": "1560"}, {"_id": "6202a62232380906ee1b243d", "index": "D", "name": "New Year's Problem", "tags": ["binary search", "greedy", "sortings"], "rating": 1800, "frequency": 1311, "__v": 0, "contestId": "1619"}, {"_id": "6202a62032380906ee1b1bb4", "index": "D", "name": "Playoff Tournament", "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "rating": 1800, "frequency": 1247, "__v": 0, "contestId": "1535"}, {"_id": "6202a61e32380906ee1b15d3", "index": "D", "name": "Array Differentiation", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"], "rating": 1800, "frequency": 1229, "__v": 0, "contestId": "1552"}, {"_id": "6202a61d32380906ee1b1574", "index": "D", "name": "Cleaning the Phone", "tags": ["binary search", "dp", "sortings", "two pointers"], "rating": 1800, "frequency": 1226, "__v": 0, "contestId": "1475"}, {"_id": "6202a62232380906ee1b2674", "index": "C", "name": "BA-String", "tags": ["brute force", "dp", "greedy", "implementation", "math"], "rating": 1800, "frequency": 1222, "__v": 0, "contestId": "1620"}, {"_id": "6202a61e32380906ee1b15d4", "index": "C", "name": "Maximize the Intersections", "tags": ["combinatorics", "constructive algorithms", "geometry", "greedy", "sortings"], "rating": 1800, "frequency": 1199, "__v": 0, "contestId": "1552"}, {"_id": "6202a61f32380906ee1b17b5", "index": "D", "name": "Carousel", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "rating": 1800, "frequency": 1136, "__v": 0, "contestId": "1328"}, {"_id": "6202a62732380906ee1b3c37", "index": "D", "name": "Integers Have Friends", "tags": ["binary search", "data structures", "math", "two pointers"], "rating": 1800, "frequency": 1128, "__v": 0, "contestId": "1549"}, {"_id": "6202a62032380906ee1b1ab0", "index": "C", "name": "Chef Monocarp", "tags": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"], "rating": 1800, "frequency": 1098, "__v": 0, "contestId": "1437"}, {"_id": "6202a61e32380906ee1b15ff", "index": "D", "name": "Lost Tree", "tags": ["constructive algorithms", "interactive", "trees"], "rating": 1800, "frequency": 1080, "__v": 0, "contestId": "1534"}, {"_id": "6202a62232380906ee1b2441", "index": "D1", "name": "Too Many Impostors (easy version)", "tags": ["constructive algorithms", "implementation", "interactive"], "rating": 1800, "frequency": 1062, "__v": 0, "contestId": "1617"}, {"_id": "6202a61e32380906ee1b1619", "index": "D", "name": "Explorer Space", "tags": ["dp", "graphs", "shortest paths"], "rating": 1800, "frequency": 1057, "__v": 0, "contestId": "1517"}, {"_id": "6202a62232380906ee1b2457", "index": "F", "name": "ATM and Students", "tags": ["binary search", "data structures", "two pointers"], "rating": 1800, "frequency": 1056, "__v": 0, "contestId": "1611"}, {"_id": "6202a62232380906ee1b231b", "index": "C", "name": "Uncle Bogdan and Country Happiness", "tags": ["dfs and similar", "greedy", "math", "trees"], "rating": 1800, "frequency": 1047, "__v": 0, "contestId": "1388"}, {"_id": "6202a61e32380906ee1b16d3", "index": "D", "name": "Take a Guess", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "rating": 1800, "frequency": 1026, "__v": 0, "contestId": "1556"}, {"_id": "6202a61e32380906ee1b170f", "index": "C", "name": "Count Triangles", "tags": ["binary search", "implementation", "math", "two pointers"], "rating": 1800, "frequency": 1016, "__v": 0, "contestId": "1355"}, {"_id": "6202a62032380906ee1b1b1c", "index": "D", "name": "Colored Rectangles", "tags": ["dp", "greedy", "sortings"], "rating": 1800, "frequency": 944, "__v": 0, "contestId": "1398"}, {"_id": "6202a61d32380906ee1b145f", "index": "D2", "name": "Prefix-Suffix Palindrome (Hard version)", "tags": ["binary search", "greedy", "hashing", "string suffix structures", "strings"], "rating": 1800, "frequency": 918, "__v": 0, "contestId": "1326"}, {"_id": "6202a61e32380906ee1b1646", "index": "D", "name": "Zookeeper and The Infinite Zoo", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "rating": 1800, "frequency": 911, "__v": 0, "contestId": "1491"}, {"_id": "6202a61e32380906ee1b16d4", "index": "C", "name": "Compressed Bracket Sequence", "tags": ["brute force", "implementation"], "rating": 1800, "frequency": 880, "__v": 0, "contestId": "1556"}, {"_id": "6202a62332380906ee1b26f6", "index": "C", "name": "Table Decorations", "tags": ["greedy"], "rating": 1800, "frequency": 875, "__v": 0, "contestId": "478"}, {"_id": "6202a62032380906ee1b1a86", "index": "D", "name": "Task On The Board", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "rating": 1800, "frequency": 866, "__v": 0, "contestId": "1367"}, {"_id": "6202a61f32380906ee1b17b9", "index": "E", "name": "Count The Blocks", "tags": ["combinatorics", "dp", "math"], "rating": 1800, "frequency": 858, "__v": 0, "contestId": "1327"}, {"_id": "6202a61d32380906ee1b14b6", "index": "E", "name": "Apollo versus Pan", "tags": ["bitmasks", "brute force", "math"], "rating": 1800, "frequency": 857, "__v": 0, "contestId": "1466"}, {"_id": "6202a62032380906ee1b1a26", "index": "F", "name": "The Treasure of The Segments", "tags": ["binary search", "data structures", "greedy"], "rating": 1800, "frequency": 847, "__v": 0, "contestId": "1462"}, {"_id": "6202a61d32380906ee1b1541", "index": "E2", "name": "Three Blocks Palindrome (hard version)", "tags": ["brute force", "data structures", "dp", "two pointers"], "rating": 1800, "frequency": 835, "__v": 0, "contestId": "1335"}, {"_id": "6202a62532380906ee1b324f", "index": "C", "name": "Going Home", "tags": ["brute force", "implementation", "math"], "rating": 1800, "frequency": 823, "__v": 0, "contestId": "1501"}, {"_id": "6202a62732380906ee1b3d10", "index": "C", "name": "Book", "tags": ["data structures", "dp", "graphs", "implementation"], "rating": 1800, "frequency": 800, "__v": 0, "contestId": "1573"}, {"_id": "6202a62032380906ee1b1961", "index": "D", "name": "Omkar and the Meaning of Life", "tags": ["constructive algorithms", "greedy", "interactive", "math"], "rating": 1800, "frequency": 786, "__v": 0, "contestId": "1586"}, {"_id": "6202a62032380906ee1b195d", "index": "F1", "name": "Korney Korneevich and XOR (easy version)", "tags": ["bitmasks", "dp", "greedy"], "rating": 1800, "frequency": 779, "__v": 0, "contestId": "1582"}, {"_id": "6202a61f32380906ee1b191c", "index": "D", "name": "Maximum Distributed Tree", "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "rating": 1800, "frequency": 772, "__v": 0, "contestId": "1401"}, {"_id": "6202a62032380906ee1b1a2f", "index": "C", "name": "Busy Robot", "tags": ["implementation"], "rating": 1800, "frequency": 738, "__v": 0, "contestId": "1463"}, {"_id": "6202a62032380906ee1b19e5", "index": "F", "name": "Maximum White Subtree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "rating": 1800, "frequency": 736, "__v": 0, "contestId": "1324"}, {"_id": "6202a62032380906ee1b1b21", "index": "E", "name": "Two Platforms", "tags": ["binary search", "dp", "sortings", "two pointers"], "rating": 1800, "frequency": 736, "__v": 0, "contestId": "1409"}, {"_id": "6202a61f32380906ee1b18f3", "index": "E", "name": "Rock, Paper, Scissors", "tags": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "rating": 1800, "frequency": 732, "__v": 0, "contestId": "1426"}, {"_id": "6202a61f32380906ee1b17b0", "index": "D", "name": "Minimum Euler Cycle", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "rating": 1800, "frequency": 712, "__v": 0, "contestId": "1334"}, {"_id": "6202a61b32380906ee1b1373", "index": "D", "name": "Rating Compression", "tags": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "rating": 1800, "frequency": 709, "__v": 0, "contestId": "1450"}, {"_id": "6202a61f32380906ee1b17fd", "index": "C", "name": "Primitive Primes", "tags": ["constructive algorithms", "math", "ternary search"], "rating": 1800, "frequency": 696, "__v": 0, "contestId": "1316"}, {"_id": "6202a61d32380906ee1b1510", "index": "D", "name": "Rescue Nibel!", "tags": ["combinatorics", "data structures", "sortings"], "rating": 1800, "frequency": 690, "__v": 0, "contestId": "1420"}, {"_id": "6202a62432380906ee1b30b5", "index": "D", "name": "Stoned Game", "tags": ["brute force", "games", "greedy", "implementation"], "rating": 1800, "frequency": 590, "__v": 0, "contestId": "1397"}, {"_id": "6202a61f32380906ee1b1810", "index": "D", "name": "Shortest and Longest LIS", "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"], "rating": 1800, "frequency": 556, "__v": 0, "contestId": "1304"}, {"_id": "6202a61c32380906ee1b13c5", "index": "B", "name": "Unmerge", "tags": ["dp"], "rating": 1800, "frequency": 553, "__v": 0, "contestId": "1381"}, {"_id": "6202a62332380906ee1b2863", "index": "D", "name": "Extreme Subtraction", "tags": ["dp", "greedy", "math"], "rating": 1800, "frequency": 548, "__v": 0, "contestId": "1443"}, {"_id": "6202a62732380906ee1b403c", "index": "D", "name": "Range and Partition", "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "rating": 1800, "frequency": 548, "__v": 0, "contestId": "1631"}, {"_id": "6202a62432380906ee1b2dfa", "index": "D", "name": "Distance in Tree", "tags": ["dfs and similar", "dp", "trees"], "rating": 1800, "frequency": 525, "__v": 0, "contestId": "161"}, {"_id": "6202a62632380906ee1b389e", "index": "D", "name": "Multiplication Table", "tags": ["binary search", "brute force"], "rating": 1800, "frequency": 524, "__v": 0, "contestId": "448"}, {"_id": "6202a62632380906ee1b3759", "index": "D", "name": "Catching Cheaters", "tags": ["dp", "greedy", "strings"], "rating": 1800, "frequency": 502, "__v": 0, "contestId": "1447"}, {"_id": "6202a62432380906ee1b301e", "index": "C", "name": "Dreamoon Likes Coloring", "tags": ["constructive algorithms", "greedy"], "rating": 1800, "frequency": 501, "__v": 0, "contestId": "1330"}, {"_id": "6202a62632380906ee1b3a19", "index": "C", "name": "Beautiful Numbers", "tags": ["brute force", "combinatorics"], "rating": 1800, "frequency": 490, "__v": 0, "contestId": "300"}, {"_id": "6202a62532380906ee1b31fd", "index": "D", "name": "Nezzar and Board", "tags": ["constructive algorithms", "math", "number theory"], "rating": 1800, "frequency": 450, "__v": 0, "contestId": "1478"}, {"_id": "6202a62432380906ee1b2cb8", "index": "D", "name": "Same GCDs", "tags": ["math", "number theory"], "rating": 1800, "frequency": 445, "__v": 0, "contestId": "1295"}, {"_id": "6202a61f32380906ee1b1771", "index": "D", "name": "Make The Fence Great Again", "tags": ["dp"], "rating": 1800, "frequency": 439, "__v": 0, "contestId": "1221"}, {"_id": "6202a61c32380906ee1b13ba", "index": "A", "name": "Boboniu Chats with Du", "tags": ["dp", "greedy", "sortings", "two pointers"], "rating": 1800, "frequency": 417, "__v": 0, "contestId": "1394"}, {"_id": "6202a62532380906ee1b35ab", "index": "D", "name": "Christmas Trees", "tags": ["graphs", "greedy", "shortest paths"], "rating": 1800, "frequency": 416, "__v": 0, "contestId": "1283"}, {"_id": "6202a62232380906ee1b2660", "index": "E1", "name": "String Coloring (easy version)", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "rating": 1800, "frequency": 414, "__v": 0, "contestId": "1296"}, {"_id": "6202a62332380906ee1b26b1", "index": "D", "name": "Edge Weight Assignment", "tags": ["bitmasks", "constructive algorithms", "greedy", "trees"], "rating": 1800, "frequency": 411, "__v": 0, "contestId": "1339"}, {"_id": "6202a62532380906ee1b31b4", "index": "D", "name": "Pashmak and Parmida's problem", "tags": ["data structures", "divide and conquer", "sortings"], "rating": 1800, "frequency": 406, "__v": 0, "contestId": "459"}, {"_id": "6202a61d32380906ee1b1580", "index": "J", "name": "Road Reform", "tags": ["dsu", "graphs", "greedy"], "rating": 1800, "frequency": 394, "__v": 0, "contestId": "1468"}, {"_id": "6202a62632380906ee1b3b73", "index": "D", "name": "Good Substrings", "tags": ["data structures", "strings"], "rating": 1800, "frequency": 373, "__v": 0, "contestId": "271"}, {"_id": "6202a61e32380906ee1b1620", "index": "B", "name": "Almost Sorted", "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation"], "rating": 1800, "frequency": 369, "__v": 0, "contestId": "1508"}, {"_id": "6202a62532380906ee1b324a", "index": "D", "name": "Slime", "tags": ["dp", "greedy", "implementation"], "rating": 1800, "frequency": 360, "__v": 0, "contestId": "1038"}, {"_id": "6202a62532380906ee1b3460", "index": "E", "name": "New Year Parties", "tags": ["dp", "greedy"], "rating": 1800, "frequency": 357, "__v": 0, "contestId": "1283"}, {"_id": "6202a62432380906ee1b2c45", "index": "G", "name": "Path Queries", "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "rating": 1800, "frequency": 356, "__v": 0, "contestId": "1213"}, {"_id": "6202a62432380906ee1b2e2b", "index": "D", "name": "Dima and Lisa", "tags": ["brute force", "math", "number theory"], "rating": 1800, "frequency": 348, "__v": 0, "contestId": "584"}, {"_id": "6202a61b32380906ee1b1391", "index": "B", "name": "Identify the Operations", "tags": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "rating": 1800, "frequency": 347, "__v": 0, "contestId": "1442"}, {"_id": "6202a62232380906ee1b2479", "index": "D", "name": "Divisible by Twenty-Five", "tags": ["brute force", "dfs and similar", "dp"], "rating": 1800, "frequency": 345, "__v": 0, "contestId": "1575"}, {"_id": "6202a62432380906ee1b2f35", "index": "D", "name": "Paint the Tree", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "rating": 1800, "frequency": 341, "__v": 0, "contestId": "1244"}, {"_id": "6202a62732380906ee1b3c5f", "index": "C", "name": "King's Path", "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"], "rating": 1800, "frequency": 334, "__v": 0, "contestId": "242"}, {"_id": "6202a62432380906ee1b3017", "index": "D", "name": "Power Products", "tags": ["hashing", "math", "number theory"], "rating": 1800, "frequency": 309, "__v": 0, "contestId": "1225"}, {"_id": "6202a62532380906ee1b345b", "index": "D", "name": "Easy Problem", "tags": ["dp"], "rating": 1800, "frequency": 309, "__v": 0, "contestId": "1096"}, {"_id": "6202a62332380906ee1b2772", "index": "D", "name": "Vasiliy's Multiset", "tags": ["binary search", "bitmasks", "data structures", "trees"], "rating": 1800, "frequency": 308, "__v": 0, "contestId": "706"}, {"_id": "6202a62332380906ee1b2ad3", "index": "D", "name": "Points and Powers of Two", "tags": ["brute force", "math"], "rating": 1800, "frequency": 304, "__v": 0, "contestId": "988"}, {"_id": "6202a62332380906ee1b26e8", "index": "C", "name": "Neko does Maths", "tags": ["brute force", "math", "number theory"], "rating": 1800, "frequency": 302, "__v": 0, "contestId": "1152"}, {"_id": "6202a62032380906ee1b19ba", "index": "F1", "name": "Tree Cutting (Easy Version)", "tags": ["dfs and similar", "trees"], "rating": 1800, "frequency": 279, "__v": 0, "contestId": "1118"}, {"_id": "6202a62332380906ee1b2a73", "index": "B", "name": "Little Elephant and Array", "tags": ["constructive algorithms", "data structures"], "rating": 1800, "frequency": 278, "__v": 0, "contestId": "220"}, {"_id": "6202a62432380906ee1b2edf", "index": "D", "name": "Recover it!", "tags": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"], "rating": 1800, "frequency": 274, "__v": 0, "contestId": "1176"}, {"_id": "6202a62432380906ee1b2c2f", "index": "A", "name": "Garland", "tags": ["dp", "greedy", "sortings"], "rating": 1800, "frequency": 272, "__v": 0, "contestId": "1286"}, {"_id": "6202a62332380906ee1b28ad", "index": "B", "name": "Ugly Pairs", "tags": ["dfs and similar", "greedy", "implementation", "sortings", "strings"], "rating": 1800, "frequency": 264, "__v": 0, "contestId": "1156"}, {"_id": "6202a61e32380906ee1b162c", "index": "E", "name": "Cakewalk", "tags": ["*special", "greedy", "implementation", "shortest paths"], "rating": 1800, "frequency": 259, "__v": 0, "contestId": "1505"}, {"_id": "6202a62532380906ee1b35ac", "index": "C", "name": "Vasya And Array", "tags": ["constructive algorithms", "greedy", "implementation"], "rating": 1800, "frequency": 259, "__v": 0, "contestId": "1187"}, {"_id": "6202a62432380906ee1b2e4f", "index": "D1", "name": "Too Many Segments (easy version)", "tags": ["greedy"], "rating": 1800, "frequency": 255, "__v": 0, "contestId": "1249"}, {"_id": "6202a62532380906ee1b3204", "index": "D", "name": "Kefa and Dishes", "tags": ["bitmasks", "dp"], "rating": 1800, "frequency": 252, "__v": 0, "contestId": "580"}, {"_id": "6202a62432380906ee1b2fcd", "index": "D", "name": "Number Of Permutations", "tags": ["combinatorics"], "rating": 1800, "frequency": 251, "__v": 0, "contestId": "1207"}, {"_id": "6202a62432380906ee1b2e4e", "index": "D2", "name": "Too Many Segments (hard version)", "tags": ["data structures", "greedy", "sortings"], "rating": 1800, "frequency": 246, "__v": 0, "contestId": "1249"}, {"_id": "6202a62232380906ee1b2314", "index": "A", "name": "Enlarge GCD", "tags": ["number theory"], "rating": 1800, "frequency": 243, "__v": 0, "contestId": "1034"}, {"_id": "6202a62432380906ee1b2ed8", "index": "E", "name": "Two Teams", "tags": ["data structures", "implementation", "sortings"], "rating": 1800, "frequency": 243, "__v": 0, "contestId": "1154"}, {"_id": "6202a61f32380906ee1b1916", "index": "E", "name": "Maximum Subsequence", "tags": ["bitmasks", "divide and conquer", "meet-in-the-middle"], "rating": 1800, "frequency": 239, "__v": 0, "contestId": "888"}, {"_id": "6202a62432380906ee1b2eb7", "index": "D", "name": "Boxes Packing", "tags": ["binary search", "implementation"], "rating": 1800, "frequency": 233, "__v": 0, "contestId": "1066"}, {"_id": "6202a62732380906ee1b3e6e", "index": "D", "name": "Eternal Victory", "tags": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "rating": 1800, "frequency": 232, "__v": 0, "contestId": "61"}, {"_id": "6202a62432380906ee1b2fef", "index": "D", "name": "A and B and Interesting Substrings", "tags": ["data structures", "dp", "two pointers"], "rating": 1800, "frequency": 228, "__v": 0, "contestId": "519"}, {"_id": "6202a62132380906ee1b1ec9", "index": "E", "name": "K Balanced Teams", "tags": ["dp", "sortings", "two pointers"], "rating": 1800, "frequency": 227, "__v": 0, "contestId": "1133"}, {"_id": "6202a62132380906ee1b1de1", "index": "C", "name": "Problem for Nazar", "tags": ["constructive algorithms", "math"], "rating": 1800, "frequency": 226, "__v": 0, "contestId": "1151"}, {"_id": "6202a62032380906ee1b1a09", "index": "D", "name": "Aerodynamic", "tags": ["geometry"], "rating": 1800, "frequency": 221, "__v": 0, "contestId": "1300"}, {"_id": "6202a61e32380906ee1b1729", "index": "C", "name": "Vus the Cossack and Strings", "tags": ["implementation", "math"], "rating": 1800, "frequency": 219, "__v": 0, "contestId": "1186"}, {"_id": "6202a62432380906ee1b303d", "index": "D", "name": "Omkar and the Meaning of Life", "tags": ["constructive algorithms", "greedy", "interactive"], "rating": 1800, "frequency": 213, "__v": 0, "contestId": "1583"}]}