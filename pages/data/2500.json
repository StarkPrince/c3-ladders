{"message": "Ladder fetched", "data": [{"_id": "6202a61f32380906ee1b183c", "index": "D2", "name": "Mocha and Diana (Hard Version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "rating": 2500, "frequency": 346, "__v": 0, "contestId": "1559"}, {"_id": "6202a61c32380906ee1b13ce", "index": "E", "name": "Inversion SwapSort", "tags": ["constructive algorithms", "greedy", "sortings"], "rating": 2500, "frequency": 261, "__v": 0, "contestId": "1375"}, {"_id": "6202a61c32380906ee1b13e3", "index": "E", "name": "Ski Accidents", "tags": ["constructive algorithms", "graphs", "greedy"], "rating": 2500, "frequency": 222, "__v": 0, "contestId": "1368"}, {"_id": "6202a62032380906ee1b1b9d", "index": "D", "name": "Nastia Plays with a Tree", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "rating": 2500, "frequency": 212, "__v": 0, "contestId": "1521"}, {"_id": "6202a62132380906ee1b1e86", "index": "E", "name": "Sorting Books", "tags": ["data structures", "dp", "greedy"], "rating": 2500, "frequency": 207, "__v": 0, "contestId": "1481"}, {"_id": "6202a62232380906ee1b23eb", "index": "E", "name": "Stringforces", "tags": ["binary search", "bitmasks", "brute force", "dp", "strings", "two pointers"], "rating": 2500, "frequency": 193, "__v": 0, "contestId": "1550"}, {"_id": "6202a61e32380906ee1b15fd", "index": "F1", "name": "Falling Sand (Easy Version)", "tags": ["dfs and similar", "graphs", "greedy"], "rating": 2500, "frequency": 186, "__v": 0, "contestId": "1534"}, {"_id": "6202a62132380906ee1b202a", "index": "E", "name": "Partition Game", "tags": ["binary search", "data structures", "divide and conquer", "dp"], "rating": 2500, "frequency": 184, "__v": 0, "contestId": "1527"}, {"_id": "6202a62032380906ee1b1bf8", "index": "D", "name": "Genius", "tags": ["bitmasks", "dp", "graphs", "number theory"], "rating": 2500, "frequency": 168, "__v": 0, "contestId": "1497"}, {"_id": "6202a62032380906ee1b1bfa", "index": "E2", "name": "Square-free division (hard version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "rating": 2500, "frequency": 166, "__v": 0, "contestId": "1497"}, {"_id": "6202a61d32380906ee1b1555", "index": "F", "name": "Kuroni and the Punishment", "tags": ["math", "number theory", "probabilities"], "rating": 2500, "frequency": 155, "__v": 0, "contestId": "1305"}, {"_id": "6202a61d32380906ee1b1464", "index": "F", "name": "Ehab's Last Theorem", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "rating": 2500, "frequency": 147, "__v": 0, "contestId": "1325"}, {"_id": "6202a62032380906ee1b1a74", "index": "E", "name": "Two Editorials", "tags": ["brute force", "dp", "greedy", "sortings", "two pointers"], "rating": 2500, "frequency": 140, "__v": 0, "contestId": "1452"}, {"_id": "6202a61e32380906ee1b15c4", "index": "C", "name": "The Three Little Pigs", "tags": ["combinatorics", "dp", "fft", "math"], "rating": 2500, "frequency": 139, "__v": 0, "contestId": "1548"}, {"_id": "6202a61b32380906ee1b1396", "index": "E", "name": "Xum", "tags": ["bitmasks", "constructive algorithms", "math", "matrices", "number theory"], "rating": 2500, "frequency": 139, "__v": 0, "contestId": "1427"}, {"_id": "6202a61c32380906ee1b13c4", "index": "C", "name": "Mastermind", "tags": ["constructive algorithms", "graph matchings", "greedy", "implementation", "sortings", "two pointers"], "rating": 2500, "frequency": 138, "__v": 0, "contestId": "1381"}, {"_id": "6202a62032380906ee1b1947", "index": "E", "name": "What Is It?", "tags": ["constructive algorithms", "greedy"], "rating": 2500, "frequency": 134, "__v": 0, "contestId": "1474"}, {"_id": "6202a62032380906ee1b1a12", "index": "E", "name": "Move and Swap", "tags": ["dfs and similar", "dp", "greedy", "trees"], "rating": 2500, "frequency": 132, "__v": 0, "contestId": "1485"}, {"_id": "6202a61e32380906ee1b160b", "index": "D", "name": "It's a bird! No, it's a plane! No, it's AaParsa!", "tags": ["constructive algorithms", "graphs", "shortest paths"], "rating": 2500, "frequency": 130, "__v": 0, "contestId": "1528"}, {"_id": "6202a61d32380906ee1b1491", "index": "C", "name": "Continuous City", "tags": ["bitmasks", "constructive algorithms"], "rating": 2500, "frequency": 124, "__v": 0, "contestId": "1479"}, {"_id": "6202a62032380906ee1b1c08", "index": "E", "name": "Almost Fault-Tolerant Database", "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "implementation"], "rating": 2500, "frequency": 123, "__v": 0, "contestId": "1492"}, {"_id": "6202a62232380906ee1b2434", "index": "E", "name": "Middle Duplication", "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "rating": 2500, "frequency": 118, "__v": 0, "contestId": "1623"}, {"_id": "6202a61c32380906ee1b13f0", "index": "C", "name": "Johnny and Megan's Necklace", "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "rating": 2500, "frequency": 118, "__v": 0, "contestId": "1361"}, {"_id": "6202a61e32380906ee1b161f", "index": "C", "name": "Complete the MST", "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "rating": 2500, "frequency": 116, "__v": 0, "contestId": "1508"}, {"_id": "6202a61e32380906ee1b15b5", "index": "E", "name": "Egor in the Republic of Dagestan", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "rating": 2500, "frequency": 114, "__v": 0, "contestId": "1407"}, {"_id": "6202a62132380906ee1b1eb3", "index": "E", "name": "Distinctive Roots in a Tree", "tags": ["data structures", "dfs and similar", "dp", "trees"], "rating": 2500, "frequency": 112, "__v": 0, "contestId": "1467"}, {"_id": "6202a61e32380906ee1b165c", "index": "E1", "name": "Cats on the Upgrade (easy version)", "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "rating": 2500, "frequency": 112, "__v": 0, "contestId": "1625"}, {"_id": "6202a61d32380906ee1b14ae", "index": "C", "name": "Strange Shuffle", "tags": ["binary search", "brute force", "constructive algorithms", "interactive"], "rating": 2500, "frequency": 111, "__v": 0, "contestId": "1470"}, {"_id": "6202a61e32380906ee1b16c5", "index": "B", "name": "Xor of 3", "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "rating": 2500, "frequency": 110, "__v": 0, "contestId": "1572"}, {"_id": "6202a61d32380906ee1b14e9", "index": "C", "name": "Team-Building", "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "rating": 2500, "frequency": 109, "__v": 0, "contestId": "1444"}, {"_id": "6202a62232380906ee1b249e", "index": "E", "name": "Rescue Niwen!", "tags": ["dp", "greedy", "string suffix structures", "strings"], "rating": 2500, "frequency": 109, "__v": 0, "contestId": "1562"}, {"_id": "6202a62232380906ee1b2351", "index": "F", "name": "AND Segments", "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"], "rating": 2500, "frequency": 107, "__v": 0, "contestId": "1327"}, {"_id": "6202a61e32380906ee1b16d2", "index": "F", "name": "Sports Betting", "tags": ["bitmasks", "combinatorics", "dp", "graphs", "math", "probabilities"], "rating": 2500, "frequency": 103, "__v": 0, "contestId": "1556"}, {"_id": "6202a61e32380906ee1b1618", "index": "E", "name": "Group Photo", "tags": ["binary search", "data structures", "implementation", "two pointers"], "rating": 2500, "frequency": 102, "__v": 0, "contestId": "1517"}, {"_id": "6202a61f32380906ee1b18c8", "index": "D", "name": "Destiny", "tags": ["data structures", "probabilities"], "rating": 2500, "frequency": 102, "__v": 0, "contestId": "840"}, {"_id": "6202a62032380906ee1b1a8a", "index": "E", "name": "Yurii Can Do Everything", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "rating": 2500, "frequency": 101, "__v": 0, "contestId": "1438"}, {"_id": "6202a61e32380906ee1b15af", "index": "G", "name": "Three Occurrences", "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "rating": 2500, "frequency": 99, "__v": 0, "contestId": "1418"}, {"_id": "6202a62032380906ee1b1bd3", "index": "F", "name": "Swapping Problem", "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "rating": 2500, "frequency": 98, "__v": 0, "contestId": "1513"}, {"_id": "6202a62032380906ee1b195f", "index": "F", "name": "Defender of Childhood Dreams", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "rating": 2500, "frequency": 97, "__v": 0, "contestId": "1586"}, {"_id": "6202a62132380906ee1b1e72", "index": "E", "name": "Nanosoft", "tags": ["binary search", "data structures", "dp", "implementation"], "rating": 2500, "frequency": 96, "__v": 0, "contestId": "1301"}, {"_id": "6202a61d32380906ee1b156c", "index": "E", "name": "Cow and Treats", "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"], "rating": 2500, "frequency": 95, "__v": 0, "contestId": "1307"}, {"_id": "6202a62032380906ee1b1ba8", "index": "E", "name": "Game with Cards", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "rating": 2500, "frequency": 95, "__v": 0, "contestId": "1539"}, {"_id": "6202a61e32380906ee1b16bf", "index": "E", "name": "Coloring", "tags": ["combinatorics", "constructive algorithms", "implementation", "math"], "rating": 2500, "frequency": 94, "__v": 0, "contestId": "1574"}, {"_id": "6202a61f32380906ee1b18d8", "index": "F", "name": "Summoning Minions", "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"], "rating": 2500, "frequency": 92, "__v": 0, "contestId": "1354"}, {"_id": "6202a62032380906ee1b1bc8", "index": "E", "name": "Baby Ehab Plays with Permutations", "tags": ["combinatorics", "dp", "math"], "rating": 2500, "frequency": 89, "__v": 0, "contestId": "1516"}, {"_id": "6202a61d32380906ee1b14e5", "index": "F", "name": "Yet Another Minimization Problem", "tags": ["divide and conquer", "dp"], "rating": 2500, "frequency": 84, "__v": 0, "contestId": "868"}, {"_id": "6202a62032380906ee1b1aab", "index": "F", "name": "Independent Set", "tags": ["dfs and similar", "dp", "trees"], "rating": 2500, "frequency": 84, "__v": 0, "contestId": "1332"}, {"_id": "6202a62032380906ee1b1c88", "index": "E2", "name": "Reading Books (hard version)", "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"], "rating": 2500, "frequency": 82, "__v": 0, "contestId": "1374"}, {"_id": "6202a62432380906ee1b2e00", "index": "D", "name": "Tanya and Password", "tags": ["dfs and similar", "graphs"], "rating": 2500, "frequency": 81, "__v": 0, "contestId": "508"}, {"_id": "6202a62132380906ee1b1df0", "index": "F", "name": "Strange Function", "tags": ["binary search", "data structures", "dp", "greedy"], "rating": 2500, "frequency": 80, "__v": 0, "contestId": "1334"}, {"_id": "6202a61d32380906ee1b1474", "index": "D", "name": "Reachable Strings", "tags": ["data structures", "hashing", "strings"], "rating": 2500, "frequency": 77, "__v": 0, "contestId": "1320"}, {"_id": "6202a62432380906ee1b2bdc", "index": "G", "name": "Mass Change Queries", "tags": ["data structures"], "rating": 2500, "frequency": 70, "__v": 0, "contestId": "911"}, {"_id": "6202a62232380906ee1b21ec", "index": "F", "name": "Controversial Rounds", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "rating": 2500, "frequency": 69, "__v": 0, "contestId": "1398"}, {"_id": "6202a61d32380906ee1b143d", "index": "D", "name": "Happy New Year", "tags": ["bitmasks", "dp", "implementation"], "rating": 2500, "frequency": 68, "__v": 0, "contestId": "1313"}, {"_id": "6202a61d32380906ee1b157c", "index": "G", "name": "Hobbits", "tags": ["binary search", "geometry"], "rating": 2500, "frequency": 68, "__v": 0, "contestId": "1468"}, {"_id": "6202a61d32380906ee1b150f", "index": "E", "name": "Battle Lemmings", "tags": ["dp", "greedy"], "rating": 2500, "frequency": 67, "__v": 0, "contestId": "1420"}, {"_id": "6202a62232380906ee1b2209", "index": "F", "name": "Christmas Game", "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "rating": 2500, "frequency": 66, "__v": 0, "contestId": "1498"}, {"_id": "6202a61c32380906ee1b13c1", "index": "B2", "name": "Village (Maximum)", "tags": ["*special", "dfs and similar", "trees"], "rating": 2500, "frequency": 65, "__v": 0, "contestId": "1387"}, {"_id": "6202a62232380906ee1b245e", "index": "G", "name": "Max Sum Array", "tags": ["combinatorics", "constructive algorithms", "greedy", "sortings"], "rating": 2500, "frequency": 65, "__v": 0, "contestId": "1612"}, {"_id": "6202a61e32380906ee1b162b", "index": "H", "name": "L BREAK into program", "tags": ["*special"], "rating": 2500, "frequency": 64, "__v": 0, "contestId": "1505"}, {"_id": "6202a62232380906ee1b2455", "index": "G", "name": "Robot and Candies", "tags": ["data structures", "graph matchings", "greedy"], "rating": 2500, "frequency": 60, "__v": 0, "contestId": "1611"}, {"_id": "6202a62032380906ee1b1aa1", "index": "F", "name": "Attack on Red Kingdom", "tags": ["games", "two pointers"], "rating": 2500, "frequency": 57, "__v": 0, "contestId": "1312"}, {"_id": "6202a62132380906ee1b1e60", "index": "D", "name": "Frequency of String", "tags": ["hashing", "string suffix structures", "strings"], "rating": 2500, "frequency": 57, "__v": 0, "contestId": "963"}, {"_id": "6202a62132380906ee1b1ffc", "index": "C", "name": "Subset Sums", "tags": ["brute force", "data structures"], "rating": 2500, "frequency": 53, "__v": 0, "contestId": "348"}, {"_id": "6202a62432380906ee1b3089", "index": "D", "name": "Beautiful numbers", "tags": ["dp", "number theory"], "rating": 2500, "frequency": 51, "__v": 0, "contestId": "55"}, {"_id": "6202a62132380906ee1b1cea", "index": "F", "name": "Make It One", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory", "shortest paths"], "rating": 2500, "frequency": 50, "__v": 0, "contestId": "1043"}, {"_id": "6202a62132380906ee1b1ee3", "index": "E", "name": "Sign on Fence", "tags": ["binary search", "constructive algorithms", "data structures"], "rating": 2500, "frequency": 48, "__v": 0, "contestId": "484"}, {"_id": "6202a62332380906ee1b28ed", "index": "D", "name": "REQ", "tags": ["data structures", "number theory"], "rating": 2500, "frequency": 48, "__v": 0, "contestId": "594"}, {"_id": "6202a62232380906ee1b23b9", "index": "F", "name": "The Number of Subpermutations", "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "rating": 2500, "frequency": 47, "__v": 0, "contestId": "1175"}, {"_id": "6202a61d32380906ee1b157e", "index": "I", "name": "Plane Tiling", "tags": ["geometry", "implementation", "math"], "rating": 2500, "frequency": 46, "__v": 0, "contestId": "1468"}, {"_id": "6202a61f32380906ee1b1790", "index": "E2", "name": "Rotate Columns (hard version)", "tags": ["bitmasks", "dp", "greedy", "sortings"], "rating": 2500, "frequency": 46, "__v": 0, "contestId": "1209"}, {"_id": "6202a62032380906ee1b1955", "index": "C", "name": "AND Graph", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs"], "rating": 2500, "frequency": 46, "__v": 0, "contestId": "986"}, {"_id": "6202a62332380906ee1b2719", "index": "F", "name": "Cheap Robot", "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"], "rating": 2500, "frequency": 46, "__v": 0, "contestId": "1253"}, {"_id": "6202a62232380906ee1b2640", "index": "E", "name": "Ehab and the Expected GCD Problem", "tags": ["combinatorics", "dp", "math", "number theory"], "rating": 2500, "frequency": 45, "__v": 0, "contestId": "1174"}, {"_id": "6202a62432380906ee1b2c03", "index": "F", "name": "Ivan and Burgers", "tags": ["data structures", "divide and conquer", "greedy", "math"], "rating": 2500, "frequency": 44, "__v": 0, "contestId": "1100"}, {"_id": "6202a62132380906ee1b1f30", "index": "D", "name": "Fuzzy Search", "tags": ["bitmasks", "brute force", "fft"], "rating": 2500, "frequency": 43, "__v": 0, "contestId": "528"}, {"_id": "6202a61d32380906ee1b148e", "index": "F", "name": "Bear and Bowling 4", "tags": ["binary search", "data structures", "divide and conquer", "geometry", "ternary search"], "rating": 2500, "frequency": 40, "__v": 0, "contestId": "660"}, {"_id": "6202a62032380906ee1b194d", "index": "C", "name": "Array Beauty", "tags": ["dp"], "rating": 2500, "frequency": 39, "__v": 0, "contestId": "1188"}, {"_id": "6202a62132380906ee1b1ed9", "index": "C", "name": "Hack it!", "tags": ["binary search", "constructive algorithms", "math"], "rating": 2500, "frequency": 37, "__v": 0, "contestId": "468"}, {"_id": "6202a61d32380906ee1b14fa", "index": "H", "name": "Virus", "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "rating": 2500, "frequency": 36, "__v": 0, "contestId": "1423"}, {"_id": "6202a62632380906ee1b386b", "index": "E", "name": "President's Path", "tags": ["dp", "graphs", "shortest paths"], "rating": 2500, "frequency": 36, "__v": 0, "contestId": "416"}, {"_id": "6202a62132380906ee1b1ec5", "index": "C", "name": "Jzzhu and Apples", "tags": ["constructive algorithms", "number theory"], "rating": 2500, "frequency": 35, "__v": 0, "contestId": "449"}, {"_id": "6202a62432380906ee1b3079", "index": "E", "name": "Game With String", "tags": ["games"], "rating": 2500, "frequency": 35, "__v": 0, "contestId": "1221"}, {"_id": "6202a62032380906ee1b19c5", "index": "F", "name": "Up and Down the Tree", "tags": ["dfs and similar", "dp", "trees"], "rating": 2500, "frequency": 34, "__v": 0, "contestId": "1065"}, {"_id": "6202a62332380906ee1b2a12", "index": "F", "name": "Alex and a TV Show", "tags": ["bitmasks", "combinatorics", "number theory"], "rating": 2500, "frequency": 34, "__v": 0, "contestId": "1097"}, {"_id": "6202a61d32380906ee1b1485", "index": "B", "name": "Double Elimination", "tags": ["dp", "implementation"], "rating": 2500, "frequency": 32, "__v": 0, "contestId": "1314"}, {"_id": "6202a62232380906ee1b21c9", "index": "F", "name": "Frogs and mosquitoes", "tags": ["data structures", "greedy"], "rating": 2500, "frequency": 31, "__v": 0, "contestId": "609"}, {"_id": "6202a62032380906ee1b1c54", "index": "B", "name": "Ant Man", "tags": ["dp", "graphs", "greedy"], "rating": 2500, "frequency": 30, "__v": 0, "contestId": "704"}, {"_id": "6202a62132380906ee1b1ffb", "index": "D", "name": "Turtles", "tags": ["dp", "matrices"], "rating": 2500, "frequency": 30, "__v": 0, "contestId": "348"}, {"_id": "6202a62232380906ee1b2247", "index": "E", "name": "Colored Balls", "tags": ["greedy", "math", "number theory"], "rating": 2500, "frequency": 30, "__v": 0, "contestId": "792"}, {"_id": "6202a62332380906ee1b2bbd", "index": "C", "name": "Museums Tour", "tags": ["dp", "graphs", "implementation"], "rating": 2500, "frequency": 30, "__v": 0, "contestId": "1137"}, {"_id": "6202a62432380906ee1b3083", "index": "E", "name": "GukiZ and GukiZiana", "tags": ["binary search", "data structures", "implementation"], "rating": 2500, "frequency": 30, "__v": 0, "contestId": "551"}, {"_id": "6202a62232380906ee1b2415", "index": "G", "name": "Tree Queries", "tags": ["dfs and similar", "graphs", "trees"], "rating": 2500, "frequency": 29, "__v": 0, "contestId": "825"}, {"_id": "6202a62432380906ee1b2df7", "index": "E", "name": "Kefa and Watch", "tags": ["data structures", "hashing", "strings"], "rating": 2500, "frequency": 29, "__v": 0, "contestId": "580"}, {"_id": "6202a62532380906ee1b35a8", "index": "E", "name": "The Top Scorer", "tags": ["combinatorics", "dp", "math", "probabilities"], "rating": 2500, "frequency": 29, "__v": 0, "contestId": "1096"}, {"_id": "6202a62032380906ee1b1aad", "index": "F", "name": "Leaf Partition", "tags": ["dp", "trees"], "rating": 2500, "frequency": 28, "__v": 0, "contestId": "1146"}, {"_id": "6202a62132380906ee1b1d29", "index": "C", "name": "On the Bench", "tags": ["combinatorics", "dp"], "rating": 2500, "frequency": 28, "__v": 0, "contestId": "840"}, {"_id": "6202a62132380906ee1b20d0", "index": "D", "name": "Power Tree", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "rating": 2500, "frequency": 28, "__v": 0, "contestId": "1120"}, {"_id": "6202a62432380906ee1b2bf7", "index": "E", "name": "Alphabet Permutations", "tags": ["data structures", "strings"], "rating": 2500, "frequency": 28, "__v": 0, "contestId": "610"}, {"_id": "6202a61f32380906ee1b1895", "index": "F", "name": "Bipartite Checking", "tags": ["data structures", "dsu", "graphs"], "rating": 2500, "frequency": 27, "__v": 0, "contestId": "813"}]}