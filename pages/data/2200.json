{"message": "Ladder fetched", "data": [{"_id": "6202a61f32380906ee1b185b", "index": "E2", "name": "Erase and Extend (Hard Version)", "tags": ["binary search", "data structures", "greedy", "hashing", "string suffix structures", "strings", "two pointers"], "rating": 2200, "frequency": 867, "__v": 0, "contestId": "1537"}, {"_id": "6202a61f32380906ee1b1892", "index": "D", "name": "Multiples and Power Differences", "tags": ["constructive algorithms", "graphs", "math", "number theory"], "rating": 2200, "frequency": 709, "__v": 0, "contestId": "1485"}, {"_id": "6202a62332380906ee1b2b80", "index": "D", "name": "Powerful array", "tags": ["data structures", "implementation", "math", "two pointers"], "rating": 2200, "frequency": 490, "__v": 0, "contestId": "86"}, {"_id": "6202a62032380906ee1b1a8b", "index": "D", "name": "Powerful Ksenia", "tags": ["bitmasks", "constructive algorithms", "math"], "rating": 2200, "frequency": 480, "__v": 0, "contestId": "1438"}, {"_id": "6202a62232380906ee1b23f9", "index": "G", "name": "To Go Or Not To Go?", "tags": ["brute force", "dfs and similar", "graphs", "greedy", "implementation", "shortest paths"], "rating": 2200, "frequency": 477, "__v": 0, "contestId": "1520"}, {"_id": "6202a62032380906ee1b1a18", "index": "D", "name": "Cleaning", "tags": ["data structures", "dp", "greedy", "math"], "rating": 2200, "frequency": 467, "__v": 0, "contestId": "1474"}, {"_id": "6202a62232380906ee1b2493", "index": "E", "name": "Non-Decreasing Dilemma", "tags": ["data structures", "divide and conquer", "math"], "rating": 2200, "frequency": 446, "__v": 0, "contestId": "1567"}, {"_id": "6202a62232380906ee1b23fa", "index": "F2", "name": "Guess the K-th Zero (Hard version)", "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "rating": 2200, "frequency": 444, "__v": 0, "contestId": "1520"}, {"_id": "6202a61e32380906ee1b166f", "index": "E", "name": "Lexicographically Small Enough", "tags": ["brute force", "data structures", "greedy", "strings"], "rating": 2200, "frequency": 417, "__v": 0, "contestId": "1616"}, {"_id": "6202a62032380906ee1b1bb3", "index": "E", "name": "Gold Transfer", "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "rating": 2200, "frequency": 406, "__v": 0, "contestId": "1535"}, {"_id": "6202a61f32380906ee1b1868", "index": "D", "name": "Kill Anton", "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "rating": 2200, "frequency": 404, "__v": 0, "contestId": "1526"}, {"_id": "6202a61e32380906ee1b15cf", "index": "F", "name": "Telepanting", "tags": ["binary search", "data structures", "dp", "sortings"], "rating": 2200, "frequency": 401, "__v": 0, "contestId": "1552"}, {"_id": "6202a61f32380906ee1b185c", "index": "F", "name": "Figure Fixing", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "math"], "rating": 2200, "frequency": 397, "__v": 0, "contestId": "1537"}, {"_id": "6202a62132380906ee1b1eb4", "index": "D", "name": "Sum of Paths", "tags": ["combinatorics", "dp", "math"], "rating": 2200, "frequency": 392, "__v": 0, "contestId": "1467"}, {"_id": "6202a61f32380906ee1b17bd", "index": "F", "name": "Kate and imperfection", "tags": ["greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "rating": 2200, "frequency": 392, "__v": 0, "contestId": "1333"}, {"_id": "6202a62032380906ee1b1b7f", "index": "D", "name": "Priority Queue", "tags": ["combinatorics", "dp", "implementation", "math", "ternary search"], "rating": 2200, "frequency": 386, "__v": 0, "contestId": "1542"}, {"_id": "6202a61d32380906ee1b14f3", "index": "E", "name": "Carrots for Rabbits", "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "rating": 2200, "frequency": 379, "__v": 0, "contestId": "1428"}, {"_id": "6202a62032380906ee1b1b0e", "index": "E", "name": "Clear the Multiset", "tags": ["data structures", "divide and conquer", "dp", "greedy"], "rating": 2200, "frequency": 372, "__v": 0, "contestId": "1400"}, {"_id": "6202a61e32380906ee1b1612", "index": "E", "name": "Phoenix and Computers", "tags": ["combinatorics", "dp", "math"], "rating": 2200, "frequency": 370, "__v": 0, "contestId": "1515"}, {"_id": "6202a62032380906ee1b1a9c", "index": "E", "name": "Calendar Ambiguity", "tags": ["math", "number theory"], "rating": 2200, "frequency": 369, "__v": 0, "contestId": "1389"}, {"_id": "6202a61e32380906ee1b15bd", "index": "D", "name": "Ezzat and Grid", "tags": ["data structures", "dp", "greedy"], "rating": 2200, "frequency": 367, "__v": 0, "contestId": "1557"}, {"_id": "6202a61e32380906ee1b15b6", "index": "D", "name": "Discrete Centrifugal Jumps", "tags": ["data structures", "dp", "graphs"], "rating": 2200, "frequency": 362, "__v": 0, "contestId": "1407"}, {"_id": "6202a62232380906ee1b23f1", "index": "D2", "name": "RPD and Rap Sheet (Hard Version)", "tags": ["brute force", "constructive algorithms", "interactive", "math"], "rating": 2200, "frequency": 356, "__v": 0, "contestId": "1543"}, {"_id": "6202a62232380906ee1b241f", "index": "E", "name": "Not Escaping", "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"], "rating": 2200, "frequency": 337, "__v": 0, "contestId": "1627"}, {"_id": "6202a62032380906ee1b1c94", "index": "E", "name": "Sum of Digits", "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "rating": 2200, "frequency": 331, "__v": 0, "contestId": "1373"}, {"_id": "6202a62032380906ee1b197a", "index": "F", "name": "Decreasing Heights", "tags": ["brute force", "dp"], "rating": 2200, "frequency": 322, "__v": 0, "contestId": "1353"}, {"_id": "6202a62232380906ee1b2408", "index": "D", "name": "Bananas in a Microwave", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "rating": 2200, "frequency": 317, "__v": 0, "contestId": "1498"}, {"_id": "6202a61f32380906ee1b183d", "index": "E", "name": "Mocha and Stars", "tags": ["combinatorics", "dp", "fft", "math", "number theory"], "rating": 2200, "frequency": 309, "__v": 0, "contestId": "1559"}, {"_id": "6202a61e32380906ee1b16d1", "index": "E", "name": "Equilibrium", "tags": ["data structures", "dp", "greedy"], "rating": 2200, "frequency": 301, "__v": 0, "contestId": "1556"}, {"_id": "6202a61f32380906ee1b188b", "index": "E", "name": "Paired Payment", "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"], "rating": 2200, "frequency": 299, "__v": 0, "contestId": "1486"}, {"_id": "6202a62032380906ee1b1aae", "index": "E", "name": "Make It Increasing", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "rating": 2200, "frequency": 296, "__v": 0, "contestId": "1437"}, {"_id": "6202a62232380906ee1b249f", "index": "D2", "name": "Two Hundred Twenty One (hard version)", "tags": ["data structures", "math"], "rating": 2200, "frequency": 292, "__v": 0, "contestId": "1562"}, {"_id": "6202a61e32380906ee1b167c", "index": "D", "name": "X(or)-mas Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "trees"], "rating": 2200, "frequency": 291, "__v": 0, "contestId": "1615"}, {"_id": "6202a61e32380906ee1b170c", "index": "F", "name": "Make k Equal", "tags": ["greedy"], "rating": 2200, "frequency": 289, "__v": 0, "contestId": "1328"}, {"_id": "6202a62132380906ee1b2177", "index": "C", "name": "Circular RMQ", "tags": ["data structures"], "rating": 2200, "frequency": 288, "__v": 0, "contestId": "52"}, {"_id": "6202a61f32380906ee1b17ba", "index": "D", "name": "Infinite Path", "tags": ["brute force", "dfs and similar", "graphs", "math", "number theory"], "rating": 2200, "frequency": 285, "__v": 0, "contestId": "1327"}, {"_id": "6202a61f32380906ee1b190b", "index": "D", "name": "Three Sequences", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "rating": 2200, "frequency": 284, "__v": 0, "contestId": "1406"}, {"_id": "6202a61f32380906ee1b1918", "index": "E2", "name": "Weights Division (hard version)", "tags": ["binary search", "dfs and similar", "greedy", "sortings", "trees", "two pointers"], "rating": 2200, "frequency": 269, "__v": 0, "contestId": "1399"}, {"_id": "6202a61e32380906ee1b170b", "index": "E", "name": "XOR and Favorite Number", "tags": ["data structures"], "rating": 2200, "frequency": 267, "__v": 0, "contestId": "617"}, {"_id": "6202a62232380906ee1b2208", "index": "E", "name": "Two Houses", "tags": ["brute force", "graphs", "greedy", "interactive", "sortings"], "rating": 2200, "frequency": 263, "__v": 0, "contestId": "1498"}, {"_id": "6202a61e32380906ee1b16ea", "index": "B2", "name": "Koa and the Beach (Hard Version)", "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "rating": 2200, "frequency": 261, "__v": 0, "contestId": "1384"}, {"_id": "6202a61f32380906ee1b17ad", "index": "E", "name": "Divisor Paths", "tags": ["combinatorics", "graphs", "greedy", "math", "number theory"], "rating": 2200, "frequency": 260, "__v": 0, "contestId": "1334"}, {"_id": "6202a61d32380906ee1b146e", "index": "E", "name": "Kuroni and the Score Distribution", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "rating": 2200, "frequency": 249, "__v": 0, "contestId": "1305"}, {"_id": "6202a61e32380906ee1b1674", "index": "E", "name": "Math Test", "tags": ["bitmasks", "brute force", "greedy"], "rating": 2200, "frequency": 248, "__v": 0, "contestId": "1622"}, {"_id": "6202a62032380906ee1b1a33", "index": "E", "name": "Water Level", "tags": ["brute force", "graphs", "greedy", "implementation", "math"], "rating": 2200, "frequency": 247, "__v": 0, "contestId": "1461"}, {"_id": "6202a61d32380906ee1b14af", "index": "D", "name": "Strange Housing", "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy"], "rating": 2200, "frequency": 246, "__v": 0, "contestId": "1470"}, {"_id": "6202a61e32380906ee1b16b6", "index": "G", "name": "Minimal Coverage", "tags": ["dp"], "rating": 2200, "frequency": 246, "__v": 0, "contestId": "1579"}, {"_id": "6202a61e32380906ee1b1651", "index": "C", "name": "Paint the Middle", "tags": ["dp", "greedy", "sortings", "two pointers"], "rating": 2200, "frequency": 242, "__v": 0, "contestId": "1630"}, {"_id": "6202a61e32380906ee1b1624", "index": "C", "name": "Travelling Salesman Problem", "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"], "rating": 2200, "frequency": 240, "__v": 0, "contestId": "1503"}, {"_id": "6202a62032380906ee1b1962", "index": "E", "name": "Moment of Bloom", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graph matchings", "graphs", "greedy", "trees"], "rating": 2200, "frequency": 235, "__v": 0, "contestId": "1586"}, {"_id": "6202a62232380906ee1b246a", "index": "G", "name": "Changing Brackets", "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "rating": 2200, "frequency": 231, "__v": 0, "contestId": "1593"}, {"_id": "6202a62332380906ee1b2ade", "index": "G", "name": "Banquet Preparations 1", "tags": ["greedy"], "rating": 2200, "frequency": 231, "__v": 0, "contestId": "1607"}, {"_id": "6202a62432380906ee1b2dfd", "index": "E", "name": "Compatible Numbers", "tags": ["bitmasks", "brute force", "dfs and similar", "dp"], "rating": 2200, "frequency": 228, "__v": 0, "contestId": "165"}, {"_id": "6202a61d32380906ee1b141e", "index": "C", "name": "Kaavi and Magic Spell", "tags": ["dp", "strings"], "rating": 2200, "frequency": 227, "__v": 0, "contestId": "1336"}, {"_id": "6202a62232380906ee1b23e2", "index": "F", "name": "Equidistant Vertices", "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"], "rating": 2200, "frequency": 226, "__v": 0, "contestId": "1551"}, {"_id": "6202a61f32380906ee1b1793", "index": "E", "name": "Erase Subsequences", "tags": ["dp", "strings"], "rating": 2200, "frequency": 215, "__v": 0, "contestId": "1303"}, {"_id": "6202a61d32380906ee1b1540", "index": "F", "name": "Robots on a Grid", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"], "rating": 2200, "frequency": 206, "__v": 0, "contestId": "1335"}, {"_id": "6202a61d32380906ee1b1421", "index": "C", "name": "Perfect Triples", "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "rating": 2200, "frequency": 201, "__v": 0, "contestId": "1338"}, {"_id": "6202a61f32380906ee1b18b9", "index": "D", "name": "Tree Requests", "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"], "rating": 2200, "frequency": 199, "__v": 0, "contestId": "570"}, {"_id": "6202a61d32380906ee1b149e", "index": "C", "name": "Nezzar and Nice Beatmap", "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "rating": 2200, "frequency": 197, "__v": 0, "contestId": "1477"}, {"_id": "6202a61e32380906ee1b1628", "index": "F", "name": "Math", "tags": ["*special", "math"], "rating": 2200, "frequency": 197, "__v": 0, "contestId": "1505"}, {"_id": "6202a62332380906ee1b2ae9", "index": "D", "name": "Magic Numbers", "tags": ["dp"], "rating": 2200, "frequency": 184, "__v": 0, "contestId": "628"}, {"_id": "6202a62232380906ee1b2444", "index": "G", "name": "Trader Problem", "tags": ["data structures", "dsu", "greedy", "sortings"], "rating": 2200, "frequency": 180, "__v": 0, "contestId": "1618"}, {"_id": "6202a61f32380906ee1b17fb", "index": "E", "name": "Construct the Binary Tree", "tags": ["brute force", "constructive algorithms", "trees"], "rating": 2200, "frequency": 176, "__v": 0, "contestId": "1311"}, {"_id": "6202a61d32380906ee1b157f", "index": "H", "name": "K and Medians", "tags": ["constructive algorithms", "greedy", "math"], "rating": 2200, "frequency": 168, "__v": 0, "contestId": "1468"}, {"_id": "6202a62332380906ee1b2adf", "index": "H", "name": "Banquet Preparations 2", "tags": ["greedy", "sortings", "two pointers"], "rating": 2200, "frequency": 158, "__v": 0, "contestId": "1607"}, {"_id": "6202a62032380906ee1b1b1b", "index": "E", "name": "Two Types of Spells", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "rating": 2200, "frequency": 152, "__v": 0, "contestId": "1398"}, {"_id": "6202a62032380906ee1b1968", "index": "C", "name": "Train Maintenance", "tags": ["brute force", "data structures", "implementation"], "rating": 2200, "frequency": 146, "__v": 0, "contestId": "1580"}, {"_id": "6202a61e32380906ee1b1632", "index": "B", "name": "Two chandeliers", "tags": ["binary search", "brute force", "chinese remainder theorem", "math", "number theory"], "rating": 2200, "frequency": 142, "__v": 0, "contestId": "1500"}, {"_id": "6202a61d32380906ee1b1581", "index": "A", "name": "LaIS", "tags": ["data structures", "dp", "greedy"], "rating": 2200, "frequency": 140, "__v": 0, "contestId": "1468"}, {"_id": "6202a61f32380906ee1b1795", "index": "C", "name": "Gerald and Giant Chess", "tags": ["combinatorics", "dp", "math", "number theory"], "rating": 2200, "frequency": 135, "__v": 0, "contestId": "559"}, {"_id": "6202a62432380906ee1b2f1d", "index": "D", "name": "0-1-Tree", "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "rating": 2200, "frequency": 133, "__v": 0, "contestId": "1156"}, {"_id": "6202a61e32380906ee1b1709", "index": "D1", "name": "Great Vova Wall (Version 1)", "tags": ["greedy", "implementation", "math"], "rating": 2200, "frequency": 121, "__v": 0, "contestId": "1092"}, {"_id": "6202a62332380906ee1b2b6d", "index": "D", "name": "Almost Difference", "tags": ["data structures", "math"], "rating": 2200, "frequency": 121, "__v": 0, "contestId": "903"}, {"_id": "6202a61b32380906ee1b137e", "index": "C", "name": "New Game Plus!", "tags": ["binary search", "dp", "greedy", "sortings"], "rating": 2200, "frequency": 114, "__v": 0, "contestId": "1456"}, {"_id": "6202a62332380906ee1b29c3", "index": "G", "name": "Minimum Possible LCM", "tags": ["brute force", "greedy", "math", "number theory"], "rating": 2200, "frequency": 113, "__v": 0, "contestId": "1154"}, {"_id": "6202a62632380906ee1b385a", "index": "E", "name": "Sausage Maximization", "tags": ["bitmasks", "data structures", "trees"], "rating": 2200, "frequency": 109, "__v": 0, "contestId": "282"}, {"_id": "6202a61f32380906ee1b1773", "index": "E", "name": "Magic Stones", "tags": ["constructive algorithms", "math", "sortings"], "rating": 2200, "frequency": 105, "__v": 0, "contestId": "1110"}, {"_id": "6202a61e32380906ee1b1706", "index": "E", "name": "Antenna Coverage", "tags": ["data structures", "dp", "greedy", "sortings"], "rating": 2200, "frequency": 103, "__v": 0, "contestId": "1253"}, {"_id": "6202a61f32380906ee1b1774", "index": "D", "name": "Jongmah", "tags": ["dp"], "rating": 2200, "frequency": 99, "__v": 0, "contestId": "1110"}, {"_id": "6202a62332380906ee1b2bb9", "index": "E", "name": "Special Segments of Permutation", "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "rating": 2200, "frequency": 98, "__v": 0, "contestId": "1156"}, {"_id": "6202a62132380906ee1b1da8", "index": "E", "name": "Keyboard Purchase", "tags": ["bitmasks", "dp"], "rating": 2200, "frequency": 93, "__v": 0, "contestId": "1238"}, {"_id": "6202a61e32380906ee1b1705", "index": "E", "name": "Marbles", "tags": ["bitmasks", "dp"], "rating": 2200, "frequency": 92, "__v": 0, "contestId": "1215"}, {"_id": "6202a62432380906ee1b2cb0", "index": "F", "name": "Two Bracket Sequences", "tags": ["dp", "strings", "two pointers"], "rating": 2200, "frequency": 89, "__v": 0, "contestId": "1272"}, {"_id": "6202a62232380906ee1b24ea", "index": "E", "name": "Minimal Segment Cover", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "rating": 2200, "frequency": 88, "__v": 0, "contestId": "1175"}, {"_id": "6202a62432380906ee1b2ca8", "index": "F", "name": "Yet Another Substring Reverse", "tags": ["bitmasks", "dp"], "rating": 2200, "frequency": 85, "__v": 0, "contestId": "1234"}, {"_id": "6202a62032380906ee1b19cd", "index": "C", "name": "Duff in the Army", "tags": ["data structures", "trees"], "rating": 2200, "frequency": 84, "__v": 0, "contestId": "587"}, {"_id": "6202a62432380906ee1b2f29", "index": "E", "name": "Permutation Separation", "tags": ["data structures", "divide and conquer"], "rating": 2200, "frequency": 84, "__v": 0, "contestId": "1295"}, {"_id": "6202a62132380906ee1b1f97", "index": "C", "name": "Three States", "tags": ["dfs and similar", "graphs", "shortest paths"], "rating": 2200, "frequency": 82, "__v": 0, "contestId": "590"}, {"_id": "6202a62232380906ee1b240e", "index": "E", "name": "Army Creation", "tags": ["binary search", "data structures"], "rating": 2200, "frequency": 81, "__v": 0, "contestId": "813"}, {"_id": "6202a62332380906ee1b2a1f", "index": "D", "name": "A Simple Task", "tags": ["bitmasks", "dp", "graphs"], "rating": 2200, "frequency": 81, "__v": 0, "contestId": "11"}, {"_id": "6202a62432380906ee1b2ec1", "index": "D2", "name": "Great Vova Wall (Version 2)", "tags": ["data structures", "implementation"], "rating": 2200, "frequency": 80, "__v": 0, "contestId": "1092"}, {"_id": "6202a62132380906ee1b1e4e", "index": "B", "name": "The Bakery", "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "rating": 2200, "frequency": 79, "__v": 0, "contestId": "833"}, {"_id": "6202a62232380906ee1b2636", "index": "E", "name": "Arithmetic Progression", "tags": ["binary search", "interactive", "number theory", "probabilities"], "rating": 2200, "frequency": 79, "__v": 0, "contestId": "1114"}, {"_id": "6202a62132380906ee1b1fb1", "index": "D", "name": "Almost Acyclic Graph", "tags": ["dfs and similar", "graphs"], "rating": 2200, "frequency": 78, "__v": 0, "contestId": "915"}, {"_id": "6202a62232380906ee1b21c8", "index": "F", "name": "Maximum Weight Subset", "tags": ["dp", "trees"], "rating": 2200, "frequency": 78, "__v": 0, "contestId": "1249"}, {"_id": "6202a62032380906ee1b1b97", "index": "E", "name": "Tourism", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "rating": 2200, "frequency": 76, "__v": 0, "contestId": "1220"}, {"_id": "6202a62532380906ee1b3509", "index": "C", "name": "GukiZ hates Boxes", "tags": ["binary search", "greedy"], "rating": 2200, "frequency": 76, "__v": 0, "contestId": "551"}, {"_id": "6202a61f32380906ee1b1767", "index": "C", "name": "And Reachability", "tags": ["bitmasks", "dp"], "rating": 2200, "frequency": 72, "__v": 0, "contestId": "1168"}, {"_id": "6202a62232380906ee1b23a6", "index": "D", "name": "Irrigation", "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "rating": 2200, "frequency": 72, "__v": 0, "contestId": "1181"}]}