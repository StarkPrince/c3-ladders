{"message": "Ladder fetched", "data": [{"_id": "6202a61e32380906ee1b1666", "index": "D", "name": "The Winter Hike", "tags": ["constructive algorithms", "greedy", "math"], "rating": 2100, "frequency": 882, "__v": 0, "contestId": "1621"}, {"_id": "6202a61b32380906ee1b1372", "index": "C1", "name": "Errich-Tac-Toe (Easy Version)", "tags": ["constructive algorithms", "math"], "rating": 2100, "frequency": 788, "__v": 0, "contestId": "1450"}, {"_id": "6202a62032380906ee1b1bac", "index": "G", "name": "Gift Set", "tags": ["binary search", "greedy", "math", "ternary search"], "rating": 2100, "frequency": 738, "__v": 0, "contestId": "1538"}, {"_id": "6202a62232380906ee1b241b", "index": "D", "name": "Martial Arts Tournament", "tags": ["binary search", "brute force", "greedy", "math"], "rating": 2100, "frequency": 734, "__v": 0, "contestId": "1626"}, {"_id": "6202a61f32380906ee1b1832", "index": "F2", "name": "Nearest Beautiful Number (hard version)", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"], "rating": 2100, "frequency": 668, "__v": 0, "contestId": "1560"}, {"_id": "6202a62032380906ee1b1bf5", "index": "D", "name": "The Number of Pairs", "tags": ["dp", "math", "number theory"], "rating": 2100, "frequency": 668, "__v": 0, "contestId": "1499"}, {"_id": "6202a62032380906ee1b1c0b", "index": "D", "name": "Max Median", "tags": ["binary search", "data structures", "dp"], "rating": 2100, "frequency": 661, "__v": 0, "contestId": "1486"}, {"_id": "6202a61e32380906ee1b16ed", "index": "D", "name": "Omkar and Circle", "tags": ["brute force", "dp", "games", "greedy"], "rating": 2100, "frequency": 607, "__v": 0, "contestId": "1372"}, {"_id": "6202a62032380906ee1b1b83", "index": "D", "name": "GCD of an Array", "tags": ["brute force", "data structures", "hashing", "implementation", "math", "number theory", "sortings", "two pointers"], "rating": 2100, "frequency": 596, "__v": 0, "contestId": "1493"}, {"_id": "6202a61e32380906ee1b1718", "index": "E", "name": "Binary Subsequence Rotation", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "rating": 2100, "frequency": 567, "__v": 0, "contestId": "1370"}, {"_id": "6202a61e32380906ee1b15c9", "index": "E", "name": "Boring Segments", "tags": ["data structures", "sortings", "trees", "two pointers"], "rating": 2100, "frequency": 560, "__v": 0, "contestId": "1555"}, {"_id": "6202a62232380906ee1b2231", "index": "D1", "name": "Divan and Kostomuksha (easy version)", "tags": ["dp", "number theory"], "rating": 2100, "frequency": 557, "__v": 0, "contestId": "1614"}, {"_id": "6202a61e32380906ee1b15db", "index": "E", "name": "Permutation Shift", "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs", "math"], "rating": 2100, "frequency": 556, "__v": 0, "contestId": "1553"}, {"_id": "6202a62032380906ee1b1ac9", "index": "F", "name": "Zero Remainder Sum ", "tags": ["dp"], "rating": 2100, "frequency": 548, "__v": 0, "contestId": "1433"}, {"_id": "6202a62032380906ee1b1a9d", "index": "D", "name": "Segment Intersections", "tags": ["brute force", "greedy", "implementation", "math"], "rating": 2100, "frequency": 532, "__v": 0, "contestId": "1389"}, {"_id": "6202a61e32380906ee1b1713", "index": "F", "name": "Swaps Again", "tags": ["constructive algorithms", "implementation", "sortings"], "rating": 2100, "frequency": 508, "__v": 0, "contestId": "1365"}, {"_id": "6202a62032380906ee1b1bc9", "index": "D", "name": "Cut", "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"], "rating": 2100, "frequency": 492, "__v": 0, "contestId": "1516"}, {"_id": "6202a62232380906ee1b267f", "index": "D", "name": "Treelabeling", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "rating": 2100, "frequency": 491, "__v": 0, "contestId": "1605"}, {"_id": "6202a62032380906ee1b1971", "index": "H", "name": "Binary Median", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"], "rating": 2100, "frequency": 476, "__v": 0, "contestId": "1360"}, {"_id": "6202a61f32380906ee1b184a", "index": "E", "name": "Minimax", "tags": ["constructive algorithms", "greedy", "strings"], "rating": 2100, "frequency": 475, "__v": 0, "contestId": "1530"}, {"_id": "6202a62232380906ee1b23e4", "index": "D2", "name": "Domino (hard version)", "tags": ["constructive algorithms", "implementation", "math"], "rating": 2100, "frequency": 473, "__v": 0, "contestId": "1551"}, {"_id": "6202a61e32380906ee1b172f", "index": "D", "name": "Guess The Maximums", "tags": ["binary search", "implementation", "interactive", "math"], "rating": 2100, "frequency": 472, "__v": 0, "contestId": "1363"}, {"_id": "6202a61e32380906ee1b1711", "index": "E", "name": "Restorer Distance", "tags": ["binary search", "greedy", "math", "sortings", "ternary search"], "rating": 2100, "frequency": 466, "__v": 0, "contestId": "1355"}, {"_id": "6202a62032380906ee1b1bad", "index": "E", "name": "Funny Substrings", "tags": ["data structures", "hashing", "implementation", "matrices", "strings"], "rating": 2100, "frequency": 465, "__v": 0, "contestId": "1538"}, {"_id": "6202a61f32380906ee1b17a0", "index": "E", "name": "Weights Distributing", "tags": ["brute force", "graphs", "greedy", "shortest paths", "sortings"], "rating": 2100, "frequency": 459, "__v": 0, "contestId": "1343"}, {"_id": "6202a62232380906ee1b2399", "index": "G", "name": "Moving to the Capital", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "rating": 2100, "frequency": 455, "__v": 0, "contestId": "1472"}, {"_id": "6202a62032380906ee1b1ad2", "index": "E", "name": "Two Arrays", "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"], "rating": 2100, "frequency": 451, "__v": 0, "contestId": "1366"}, {"_id": "6202a61e32380906ee1b1723", "index": "D", "name": "Ehab's Last Corollary", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "rating": 2100, "frequency": 442, "__v": 0, "contestId": "1364"}, {"_id": "6202a61f32380906ee1b1794", "index": "E", "name": "Array Shrinking", "tags": ["dp", "greedy"], "rating": 2100, "frequency": 433, "__v": 0, "contestId": "1312"}, {"_id": "6202a62032380906ee1b1af7", "index": "D", "name": "Rarity and New Dress", "tags": ["dfs and similar", "dp", "implementation", "shortest paths"], "rating": 2100, "frequency": 424, "__v": 0, "contestId": "1393"}, {"_id": "6202a61d32380906ee1b1512", "index": "C2", "name": "Pok\u00e9mon Army (hard version)", "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "rating": 2100, "frequency": 421, "__v": 0, "contestId": "1420"}, {"_id": "6202a62232380906ee1b23ef", "index": "G", "name": "How Many Paths?", "tags": ["dfs and similar", "dp", "graphs", "trees"], "rating": 2100, "frequency": 420, "__v": 0, "contestId": "1547"}, {"_id": "6202a62232380906ee1b2465", "index": "E", "name": "Arena", "tags": ["combinatorics", "dp", "math"], "rating": 2100, "frequency": 417, "__v": 0, "contestId": "1606"}, {"_id": "6202a61e32380906ee1b15b1", "index": "D", "name": "Trash Problem", "tags": ["data structures", "implementation"], "rating": 2100, "frequency": 406, "__v": 0, "contestId": "1418"}, {"_id": "6202a62032380906ee1b1a62", "index": "F", "name": "Array Partition", "tags": ["binary search", "data structures", "greedy", "two pointers"], "rating": 2100, "frequency": 400, "__v": 0, "contestId": "1454"}, {"_id": "6202a61f32380906ee1b17bb", "index": "D", "name": "Challenges in school \u211641", "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"], "rating": 2100, "frequency": 384, "__v": 0, "contestId": "1333"}, {"_id": "6202a62032380906ee1b1ac8", "index": "G", "name": "Reducing Delivery Cost", "tags": ["brute force", "graphs", "shortest paths"], "rating": 2100, "frequency": 366, "__v": 0, "contestId": "1433"}, {"_id": "6202a62132380906ee1b1fa3", "index": "F", "name": "Subsequences of Length Two", "tags": ["dp", "strings"], "rating": 2100, "frequency": 354, "__v": 0, "contestId": "1409"}, {"_id": "6202a62232380906ee1b239a", "index": "F", "name": "New Year's Puzzle", "tags": ["brute force", "dp", "graph matchings", "greedy", "sortings"], "rating": 2100, "frequency": 348, "__v": 0, "contestId": "1472"}, {"_id": "6202a61f32380906ee1b17ce", "index": "E", "name": "Height All the Same", "tags": ["combinatorics", "constructive algorithms", "math", "matrices"], "rating": 2100, "frequency": 346, "__v": 0, "contestId": "1332"}, {"_id": "6202a62032380906ee1b1bce", "index": "E", "name": "Colorings and Dominoes", "tags": ["combinatorics", "dp", "greedy", "math"], "rating": 2100, "frequency": 341, "__v": 0, "contestId": "1511"}, {"_id": "6202a62032380906ee1b1a84", "index": "F1", "name": "Flying Sort (Easy Version)", "tags": ["dp", "greedy", "two pointers"], "rating": 2100, "frequency": 339, "__v": 0, "contestId": "1367"}, {"_id": "6202a61c32380906ee1b13b2", "index": "E", "name": "Omkar and Duck", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "rating": 2100, "frequency": 331, "__v": 0, "contestId": "1392"}, {"_id": "6202a62232380906ee1b2469", "index": "F", "name": "Red-Black Number", "tags": ["dfs and similar", "dp", "implementation", "math", "meet-in-the-middle"], "rating": 2100, "frequency": 324, "__v": 0, "contestId": "1593"}, {"_id": "6202a61f32380906ee1b18fd", "index": "E", "name": "Decryption", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "rating": 2100, "frequency": 321, "__v": 0, "contestId": "1419"}, {"_id": "6202a61d32380906ee1b14b5", "index": "F", "name": "Euclid's nightmare", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "rating": 2100, "frequency": 316, "__v": 0, "contestId": "1466"}, {"_id": "6202a62432380906ee1b2be5", "index": "F", "name": "Ant colony", "tags": ["data structures", "math", "number theory"], "rating": 2100, "frequency": 313, "__v": 0, "contestId": "474"}, {"_id": "6202a61e32380906ee1b1657", "index": "D1", "name": "Game on Sum (Easy Version)", "tags": ["combinatorics", "dp", "games", "math"], "rating": 2100, "frequency": 305, "__v": 0, "contestId": "1628"}, {"_id": "6202a61e32380906ee1b16a3", "index": "E", "name": "Staircases", "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"], "rating": 2100, "frequency": 303, "__v": 0, "contestId": "1598"}, {"_id": "6202a62032380906ee1b1979", "index": "E", "name": "Graph Coloring", "tags": ["dfs and similar", "dp", "graphs"], "rating": 2100, "frequency": 303, "__v": 0, "contestId": "1354"}, {"_id": "6202a62532380906ee1b326f", "index": "E", "name": "Tree Painting", "tags": ["dfs and similar", "dp", "trees"], "rating": 2100, "frequency": 300, "__v": 0, "contestId": "1187"}, {"_id": "6202a61d32380906ee1b1492", "index": "B2", "name": "Painting the Array II", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "rating": 2100, "frequency": 275, "__v": 0, "contestId": "1479"}, {"_id": "6202a61f32380906ee1b1875", "index": "E", "name": "Assimilation IV", "tags": ["combinatorics", "dp", "math", "probabilities", "two pointers"], "rating": 2100, "frequency": 253, "__v": 0, "contestId": "1525"}, {"_id": "6202a62432380906ee1b2c0a", "index": "E", "name": "Minimum spanning tree for each edge", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"], "rating": 2100, "frequency": 247, "__v": 0, "contestId": "609"}, {"_id": "6202a62232380906ee1b2635", "index": "C", "name": "Ciel the Commander", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "rating": 2100, "frequency": 243, "__v": 0, "contestId": "321"}, {"_id": "6202a61b32380906ee1b1387", "index": "C", "name": "Xor Tree", "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "rating": 2100, "frequency": 227, "__v": 0, "contestId": "1446"}, {"_id": "6202a62332380906ee1b27f7", "index": "D", "name": "Police Stations", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"], "rating": 2100, "frequency": 219, "__v": 0, "contestId": "796"}, {"_id": "6202a61d32380906ee1b146b", "index": "B", "name": "Present", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "rating": 2100, "frequency": 216, "__v": 0, "contestId": "1322"}, {"_id": "6202a61f32380906ee1b18b6", "index": "E", "name": "Blood Cousins", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "rating": 2100, "frequency": 212, "__v": 0, "contestId": "208"}, {"_id": "6202a62432380906ee1b2fee", "index": "E", "name": "A and B and Lecture Rooms", "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"], "rating": 2100, "frequency": 210, "__v": 0, "contestId": "519"}, {"_id": "6202a62132380906ee1b1ee6", "index": "B", "name": "Maximum Value", "tags": ["binary search", "math", "sortings", "two pointers"], "rating": 2100, "frequency": 206, "__v": 0, "contestId": "484"}, {"_id": "6202a61d32380906ee1b1489", "index": "C", "name": "Water Balance", "tags": ["data structures", "geometry", "greedy"], "rating": 2100, "frequency": 199, "__v": 0, "contestId": "1299"}, {"_id": "6202a62032380906ee1b19ec", "index": "E", "name": "Connected Components?", "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "rating": 2100, "frequency": 195, "__v": 0, "contestId": "920"}, {"_id": "6202a61f32380906ee1b1842", "index": "C", "name": "Skyline Photo", "tags": ["binary search", "data structures", "dp", "greedy"], "rating": 2100, "frequency": 168, "__v": 0, "contestId": "1483"}, {"_id": "6202a62432380906ee1b2cb6", "index": "D", "name": "Segment Tree", "tags": ["data structures", "dsu", "graphs", "trees"], "rating": 2100, "frequency": 168, "__v": 0, "contestId": "1278"}, {"_id": "6202a62232380906ee1b24d8", "index": "D", "name": "Coloring Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "rating": 2100, "frequency": 166, "__v": 0, "contestId": "1217"}, {"_id": "6202a62032380906ee1b1bdb", "index": "D", "name": "Digits", "tags": ["dp", "math", "number theory"], "rating": 2100, "frequency": 155, "__v": 0, "contestId": "1510"}, {"_id": "6202a62432380906ee1b2e88", "index": "E", "name": "New Year Tree", "tags": ["bitmasks", "data structures", "trees"], "rating": 2100, "frequency": 152, "__v": 0, "contestId": "620"}, {"_id": "6202a62232380906ee1b2369", "index": "E", "name": "Common Number", "tags": ["binary search", "combinatorics", "dp", "math"], "rating": 2100, "frequency": 147, "__v": 0, "contestId": "1271"}, {"_id": "6202a62232380906ee1b2395", "index": "D", "name": "Round Subset", "tags": ["dp", "math"], "rating": 2100, "frequency": 147, "__v": 0, "contestId": "837"}, {"_id": "6202a62332380906ee1b2ad2", "index": "E", "name": "Divisibility by 25", "tags": ["brute force", "greedy"], "rating": 2100, "frequency": 146, "__v": 0, "contestId": "988"}, {"_id": "6202a62232380906ee1b265f", "index": "F", "name": "Berland Beauty", "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "rating": 2100, "frequency": 144, "__v": 0, "contestId": "1296"}, {"_id": "6202a62132380906ee1b1f82", "index": "F", "name": "Xor-Paths", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "rating": 2100, "frequency": 139, "__v": 0, "contestId": "1006"}, {"_id": "6202a61b32380906ee1b1361", "index": "B", "name": "Grime Zoo", "tags": ["brute force", "data structures", "greedy", "implementation", "ternary search"], "rating": 2100, "frequency": 136, "__v": 0, "contestId": "1464"}, {"_id": "6202a62432380906ee1b2ee4", "index": "F1", "name": "Complete the Projects (easy version)", "tags": ["greedy"], "rating": 2100, "frequency": 132, "__v": 0, "contestId": "1203"}, {"_id": "6202a62132380906ee1b2166", "index": "D", "name": "Water Tree", "tags": ["data structures", "dfs and similar", "graphs", "trees"], "rating": 2100, "frequency": 130, "__v": 0, "contestId": "343"}, {"_id": "6202a61d32380906ee1b14e4", "index": "C", "name": "Kalila and Dimna in the Logging Industry", "tags": ["dp", "geometry"], "rating": 2100, "frequency": 124, "__v": 0, "contestId": "319"}, {"_id": "6202a62532380906ee1b31e1", "index": "F", "name": "Remainder Problem", "tags": ["brute force", "data structures", "implementation"], "rating": 2100, "frequency": 123, "__v": 0, "contestId": "1207"}, {"_id": "6202a62132380906ee1b1df8", "index": "D", "name": "Olya and Energy Drinks", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "rating": 2100, "frequency": 121, "__v": 0, "contestId": "877"}, {"_id": "6202a61c32380906ee1b13c0", "index": "B1", "name": "Village (Minimum)", "tags": ["*special", "dp", "greedy", "trees"], "rating": 2100, "frequency": 120, "__v": 0, "contestId": "1387"}, {"_id": "6202a61f32380906ee1b1814", "index": "E", "name": "Beautiful Mirrors", "tags": ["data structures", "dp", "math", "probabilities"], "rating": 2100, "frequency": 120, "__v": 0, "contestId": "1265"}, {"_id": "6202a62132380906ee1b1ed3", "index": "C", "name": "Civilization", "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"], "rating": 2100, "frequency": 119, "__v": 0, "contestId": "455"}, {"_id": "6202a61f32380906ee1b1755", "index": "F", "name": "Wi-Fi", "tags": ["data structures", "dp", "greedy"], "rating": 2100, "frequency": 118, "__v": 0, "contestId": "1216"}, {"_id": "6202a62032380906ee1b1be3", "index": "G", "name": "Guide", "tags": [], "rating": 2100, "frequency": 118, "__v": 0, "contestId": "1510"}, {"_id": "6202a62332380906ee1b26aa", "index": "D", "name": "Magic Gems", "tags": ["dp", "math", "matrices"], "rating": 2100, "frequency": 115, "__v": 0, "contestId": "1117"}, {"_id": "6202a62432380906ee1b2bef", "index": "D", "name": "Valid Sets", "tags": ["dfs and similar", "dp", "math", "trees"], "rating": 2100, "frequency": 111, "__v": 0, "contestId": "486"}, {"_id": "6202a61d32380906ee1b14ed", "index": "C", "name": "Solo mid Oracle", "tags": ["binary search", "greedy", "math", "ternary search"], "rating": 2100, "frequency": 110, "__v": 0, "contestId": "1434"}, {"_id": "6202a62232380906ee1b2477", "index": "L", "name": "Longest Array Deconstruction", "tags": ["data structures", "divide and conquer", "dp", "sortings"], "rating": 2100, "frequency": 109, "__v": 0, "contestId": "1575"}, {"_id": "6202a61f32380906ee1b1910", "index": "D", "name": "Portals", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "rating": 2100, "frequency": 108, "__v": 0, "contestId": "1271"}, {"_id": "6202a62232380906ee1b218a", "index": "E", "name": "Mahmoud and a xor trip", "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "rating": 2100, "frequency": 104, "__v": 0, "contestId": "766"}, {"_id": "6202a62332380906ee1b27ac", "index": "E", "name": "Anton and Tree", "tags": ["dfs and similar", "dp", "trees"], "rating": 2100, "frequency": 104, "__v": 0, "contestId": "734"}, {"_id": "6202a62432380906ee1b2cac", "index": "F", "name": "Unstable String Sort", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "rating": 2100, "frequency": 101, "__v": 0, "contestId": "1213"}, {"_id": "6202a62032380906ee1b1996", "index": "B2", "name": "Send Boxes to Alice (Hard Version)", "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "rating": 2100, "frequency": 100, "__v": 0, "contestId": "1254"}, {"_id": "6202a62332380906ee1b2829", "index": "D2", "name": "Kirk and a Binary String (hard version)", "tags": ["data structures", "greedy", "math", "strings"], "rating": 2100, "frequency": 99, "__v": 0, "contestId": "1204"}, {"_id": "6202a62432380906ee1b2eb2", "index": "E", "name": "Tree with Small Distances", "tags": ["dp", "graphs", "greedy"], "rating": 2100, "frequency": 99, "__v": 0, "contestId": "1029"}, {"_id": "6202a62432380906ee1b2eba", "index": "F2", "name": "Pictures with Kittens (hard version)", "tags": ["data structures", "dp"], "rating": 2100, "frequency": 99, "__v": 0, "contestId": "1077"}, {"_id": "6202a62432380906ee1b2ed9", "index": "F", "name": "Shovels Shop", "tags": ["dp", "greedy", "sortings"], "rating": 2100, "frequency": 99, "__v": 0, "contestId": "1154"}, {"_id": "6202a62132380906ee1b1de2", "index": "E", "name": "Number of Components", "tags": ["combinatorics", "data structures", "dp", "math"], "rating": 2100, "frequency": 98, "__v": 0, "contestId": "1151"}, {"_id": "6202a62232380906ee1b24d0", "index": "F", "name": "MST Unification", "tags": ["binary search", "dsu", "graphs", "greedy"], "rating": 2100, "frequency": 98, "__v": 0, "contestId": "1108"}, {"_id": "6202a62232380906ee1b2379", "index": "E", "name": "We Need More Bosses", "tags": ["dfs and similar", "graphs", "trees"], "rating": 2100, "frequency": 95, "__v": 0, "contestId": "1000"}]}