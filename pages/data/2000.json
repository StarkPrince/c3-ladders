{"message": "Ladder fetched", "data": [{"_id": "6202a62032380906ee1b1a8c", "index": "C", "name": "Engineer Artem", "tags": ["2-sat", "chinese remainder theorem", "constructive algorithms", "fft", "flows"], "rating": 2000, "frequency": 1292, "__v": 0, "contestId": "1438"}, {"_id": "6202a62232380906ee1b244f", "index": "E", "name": "Crazy Robot", "tags": ["dfs and similar", "graphs"], "rating": 2000, "frequency": 1061, "__v": 0, "contestId": "1613"}, {"_id": "6202a62032380906ee1b1ad3", "index": "D", "name": "Two Divisors", "tags": ["constructive algorithms", "math", "number theory"], "rating": 2000, "frequency": 1025, "__v": 0, "contestId": "1366"}, {"_id": "6202a61e32380906ee1b1719", "index": "D", "name": "Odd-Even Subsequence", "tags": ["binary search", "dp", "dsu", "greedy", "implementation"], "rating": 2000, "frequency": 937, "__v": 0, "contestId": "1370"}, {"_id": "6202a61e32380906ee1b1738", "index": "D", "name": "Yet Another Yet Another Task", "tags": ["data structures", "dp", "implementation", "two pointers"], "rating": 2000, "frequency": 910, "__v": 0, "contestId": "1359"}, {"_id": "6202a62232380906ee1b2445", "index": "F", "name": "Reverse", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "implementation", "math", "strings"], "rating": 2000, "frequency": 843, "__v": 0, "contestId": "1618"}, {"_id": "6202a61e32380906ee1b166d", "index": "D", "name": "Keep the Average High", "tags": ["dp", "greedy", "math"], "rating": 2000, "frequency": 826, "__v": 0, "contestId": "1616"}, {"_id": "6202a61f32380906ee1b1861", "index": "D", "name": "Omkar and Medians", "tags": ["data structures", "greedy", "implementation"], "rating": 2000, "frequency": 799, "__v": 0, "contestId": "1536"}, {"_id": "6202a61e32380906ee1b164b", "index": "D", "name": "New Year Concert", "tags": ["binary search", "data structures", "greedy", "math", "number theory", "two pointers"], "rating": 2000, "frequency": 789, "__v": 0, "contestId": "1632"}, {"_id": "6202a61f32380906ee1b1803", "index": "D", "name": "Three Integers", "tags": ["brute force", "math"], "rating": 2000, "frequency": 789, "__v": 0, "contestId": "1311"}, {"_id": "6202a62032380906ee1b1b9c", "index": "C", "name": "Nastia and a Hidden Permutation", "tags": ["constructive algorithms", "interactive"], "rating": 2000, "frequency": 780, "__v": 0, "contestId": "1521"}, {"_id": "6202a62232380906ee1b2673", "index": "D", "name": "Exact Change", "tags": ["brute force", "constructive algorithms", "greedy"], "rating": 2000, "frequency": 735, "__v": 0, "contestId": "1620"}, {"_id": "6202a61e32380906ee1b1730", "index": "E", "name": "Tree Shuffling", "tags": ["dfs and similar", "dp", "greedy", "trees"], "rating": 2000, "frequency": 702, "__v": 0, "contestId": "1363"}, {"_id": "6202a62332380906ee1b28b3", "index": "E", "name": "Masha-forgetful", "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"], "rating": 2000, "frequency": 693, "__v": 0, "contestId": "1624"}, {"_id": "6202a62232380906ee1b231a", "index": "D", "name": "Captain Flint and Treasure", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "rating": 2000, "frequency": 690, "__v": 0, "contestId": "1388"}, {"_id": "6202a61f32380906ee1b1873", "index": "C", "name": "Robot Collisions", "tags": ["data structures", "greedy", "implementation", "sortings"], "rating": 2000, "frequency": 686, "__v": 0, "contestId": "1525"}, {"_id": "6202a61e32380906ee1b1675", "index": "D", "name": "Shuffle", "tags": ["combinatorics", "math", "two pointers"], "rating": 2000, "frequency": 679, "__v": 0, "contestId": "1622"}, {"_id": "6202a62232380906ee1b2492", "index": "D", "name": "Expression Evaluation Error", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "rating": 2000, "frequency": 671, "__v": 0, "contestId": "1567"}, {"_id": "6202a61f32380906ee1b1914", "index": "E1", "name": "Weights Division (easy version)", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "rating": 2000, "frequency": 663, "__v": 0, "contestId": "1399"}, {"_id": "6202a61e32380906ee1b16c0", "index": "D", "name": "The Strongest Build", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "hashing", "implementation"], "rating": 2000, "frequency": 659, "__v": 0, "contestId": "1574"}, {"_id": "6202a62032380906ee1b1bd5", "index": "D", "name": "GCD and MST", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "number theory", "sortings"], "rating": 2000, "frequency": 646, "__v": 0, "contestId": "1513"}, {"_id": "6202a61e32380906ee1b1737", "index": "E", "name": "Modular Stability", "tags": ["combinatorics", "math", "number theory"], "rating": 2000, "frequency": 639, "__v": 0, "contestId": "1359"}, {"_id": "6202a61e32380906ee1b16ca", "index": "E", "name": "Buds Re-hanging", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "rating": 2000, "frequency": 612, "__v": 0, "contestId": "1566"}, {"_id": "6202a62132380906ee1b1e87", "index": "D", "name": "AB Graph", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "rating": 2000, "frequency": 612, "__v": 0, "contestId": "1481"}, {"_id": "6202a62032380906ee1b1b84", "index": "C", "name": "K-beautiful Strings", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "strings"], "rating": 2000, "frequency": 610, "__v": 0, "contestId": "1493"}, {"_id": "6202a62032380906ee1b1a63", "index": "E", "name": "Number of Simple Paths", "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "rating": 2000, "frequency": 608, "__v": 0, "contestId": "1454"}, {"_id": "6202a62032380906ee1b1bcd", "index": "D", "name": "Cut and Stick", "tags": ["binary search", "data structures", "greedy", "implementation", "sortings"], "rating": 2000, "frequency": 604, "__v": 0, "contestId": "1514"}, {"_id": "6202a61f32380906ee1b176d", "index": "C2", "name": "Not So Simple Polygon Embedding", "tags": ["binary search", "brute force", "geometry", "math"], "rating": 2000, "frequency": 601, "__v": 0, "contestId": "1354"}, {"_id": "6202a61e32380906ee1b16e5", "index": "E", "name": "Directing Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "rating": 2000, "frequency": 595, "__v": 0, "contestId": "1385"}, {"_id": "6202a62332380906ee1b28b2", "index": "F", "name": "Interacdive Problem", "tags": ["binary search", "constructive algorithms", "interactive"], "rating": 2000, "frequency": 570, "__v": 0, "contestId": "1624"}, {"_id": "6202a61b32380906ee1b1398", "index": "C", "name": "The Hard Work of Paparazzi", "tags": ["dp"], "rating": 2000, "frequency": 568, "__v": 0, "contestId": "1427"}, {"_id": "6202a62032380906ee1b1be7", "index": "G", "name": "Maximize the Remaining String", "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "rating": 2000, "frequency": 565, "__v": 0, "contestId": "1506"}, {"_id": "6202a61f32380906ee1b18a8", "index": "C", "name": "Choosing flowers", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"], "rating": 2000, "frequency": 551, "__v": 0, "contestId": "1379"}, {"_id": "6202a62232380906ee1b2320", "index": "D", "name": "Berserk And Fireball", "tags": ["constructive algorithms", "greedy", "implementation", "math", "two pointers"], "rating": 2000, "frequency": 550, "__v": 0, "contestId": "1380"}, {"_id": "6202a62032380906ee1b1a6d", "index": "E1", "name": "Bitwise Queries (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "rating": 2000, "frequency": 545, "__v": 0, "contestId": "1451"}, {"_id": "6202a62032380906ee1b1b0a", "index": "D", "name": "505", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"], "rating": 2000, "frequency": 541, "__v": 0, "contestId": "1391"}, {"_id": "6202a62232380906ee1b23e3", "index": "E", "name": "Fixed Points", "tags": ["binary search", "brute force", "dp"], "rating": 2000, "frequency": 537, "__v": 0, "contestId": "1551"}, {"_id": "6202a62032380906ee1b1c11", "index": "E", "name": "Cheap Dinner", "tags": ["brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"], "rating": 2000, "frequency": 513, "__v": 0, "contestId": "1487"}, {"_id": "6202a62032380906ee1b1958", "index": "E", "name": "Pchelyonok and Segments", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "rating": 2000, "frequency": 490, "__v": 0, "contestId": "1582"}, {"_id": "6202a61b32380906ee1b13a3", "index": "D", "name": "Searchlights", "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"], "rating": 2000, "frequency": 461, "__v": 0, "contestId": "1408"}, {"_id": "6202a61f32380906ee1b18f2", "index": "F", "name": "Number of Subsequences", "tags": ["combinatorics", "dp", "strings"], "rating": 2000, "frequency": 451, "__v": 0, "contestId": "1426"}, {"_id": "6202a62332380906ee1b2832", "index": "E", "name": "Bertown roads", "tags": ["dfs and similar", "graphs"], "rating": 2000, "frequency": 439, "__v": 0, "contestId": "118"}, {"_id": "6202a62132380906ee1b2064", "index": "C", "name": "Sereja and Brackets", "tags": ["data structures", "schedules"], "rating": 2000, "frequency": 436, "__v": 0, "contestId": "380"}, {"_id": "6202a61f32380906ee1b180f", "index": "E", "name": "1-Trees and Queries", "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "rating": 2000, "frequency": 432, "__v": 0, "contestId": "1304"}, {"_id": "6202a62032380906ee1b1be6", "index": "F", "name": "Triangular Paths", "tags": ["constructive algorithms", "graphs", "math", "shortest paths", "sortings"], "rating": 2000, "frequency": 428, "__v": 0, "contestId": "1506"}, {"_id": "6202a62732380906ee1b402f", "index": "D", "name": "Guess the Permutation", "tags": ["binary search", "combinatorics", "interactive", "math"], "rating": 2000, "frequency": 421, "__v": 0, "contestId": "1589"}, {"_id": "6202a61e32380906ee1b168e", "index": "D", "name": "Not Quite Lee", "tags": ["combinatorics", "dp", "math", "number theory"], "rating": 2000, "frequency": 412, "__v": 0, "contestId": "1610"}, {"_id": "6202a61b32380906ee1b1397", "index": "D", "name": "Unshuffling a Deck", "tags": ["constructive algorithms", "implementation"], "rating": 2000, "frequency": 405, "__v": 0, "contestId": "1427"}, {"_id": "6202a61c32380906ee1b1410", "index": "B", "name": "Orac and Medians", "tags": ["constructive algorithms", "greedy", "math"], "rating": 2000, "frequency": 390, "__v": 0, "contestId": "1349"}, {"_id": "6202a61d32380906ee1b1450", "index": "D", "name": "Time to Run", "tags": ["constructive algorithms", "graphs", "implementation"], "rating": 2000, "frequency": 368, "__v": 0, "contestId": "1301"}, {"_id": "6202a62232380906ee1b243b", "index": "F", "name": "Let's Play the Hat?", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "rating": 2000, "frequency": 356, "__v": 0, "contestId": "1619"}, {"_id": "6202a62032380906ee1b19f7", "index": "D", "name": "Nash Matrix", "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "rating": 2000, "frequency": 338, "__v": 0, "contestId": "1316"}, {"_id": "6202a62232380906ee1b243a", "index": "G", "name": "Unusual Minesweeper", "tags": ["binary search", "dfs and similar", "dsu", "greedy", "sortings"], "rating": 2000, "frequency": 338, "__v": 0, "contestId": "1619"}, {"_id": "6202a62632380906ee1b3801", "index": "D", "name": "Make Them Equal", "tags": ["constructive algorithms", "greedy", "math"], "rating": 2000, "frequency": 337, "__v": 0, "contestId": "1417"}, {"_id": "6202a62432380906ee1b301b", "index": "D", "name": "Monopole Magnets", "tags": ["constructive algorithms", "dfs and similar", "dsu"], "rating": 2000, "frequency": 333, "__v": 0, "contestId": "1345"}, {"_id": "6202a61c32380906ee1b140f", "index": "C", "name": "Orac and Game of Life", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "rating": 2000, "frequency": 326, "__v": 0, "contestId": "1349"}, {"_id": "6202a62332380906ee1b28f2", "index": "D", "name": "Minimax Problem", "tags": ["binary search", "bitmasks", "dp"], "rating": 2000, "frequency": 326, "__v": 0, "contestId": "1288"}, {"_id": "6202a62232380906ee1b21b7", "index": "D", "name": "Prefixes and Suffixes", "tags": ["dp", "string suffix structures", "strings", "two pointers"], "rating": 2000, "frequency": 323, "__v": 0, "contestId": "432"}, {"_id": "6202a62232380906ee1b245f", "index": "E", "name": "Messages", "tags": ["brute force", "dp", "greedy", "probabilities", "sortings"], "rating": 2000, "frequency": 315, "__v": 0, "contestId": "1612"}, {"_id": "6202a62432380906ee1b2e3a", "index": "F", "name": "Clear the String", "tags": ["dp"], "rating": 2000, "frequency": 299, "__v": 0, "contestId": "1132"}, {"_id": "6202a62432380906ee1b2f50", "index": "D", "name": "XOR-gun", "tags": ["brute force", "constructive algorithms", "dp"], "rating": 2000, "frequency": 298, "__v": 0, "contestId": "1457"}, {"_id": "6202a61d32380906ee1b1507", "index": "C", "name": "XOR Inverse", "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "rating": 2000, "frequency": 289, "__v": 0, "contestId": "1416"}, {"_id": "6202a62432380906ee1b2f34", "index": "C", "name": "The Football Season", "tags": ["brute force", "math", "number theory"], "rating": 2000, "frequency": 286, "__v": 0, "contestId": "1244"}, {"_id": "6202a62232380906ee1b2661", "index": "E2", "name": "String Coloring (hard version)", "tags": ["data structures", "dp"], "rating": 2000, "frequency": 285, "__v": 0, "contestId": "1296"}, {"_id": "6202a62332380906ee1b26c6", "index": "B", "name": "The least round way", "tags": ["dp", "math"], "rating": 2000, "frequency": 272, "__v": 0, "contestId": "2"}, {"_id": "6202a62332380906ee1b26bc", "index": "E", "name": "XOR on Segment", "tags": ["bitmasks", "data structures"], "rating": 2000, "frequency": 269, "__v": 0, "contestId": "242"}, {"_id": "6202a62232380906ee1b232d", "index": "F", "name": "SUM and REPLACE", "tags": ["brute force", "data structures", "dsu", "number theory"], "rating": 2000, "frequency": 262, "__v": 0, "contestId": "920"}, {"_id": "6202a62132380906ee1b1e55", "index": "E", "name": "Reachability from the Capital", "tags": ["dfs and similar", "graphs", "greedy"], "rating": 2000, "frequency": 261, "__v": 0, "contestId": "999"}, {"_id": "6202a62432380906ee1b2f44", "index": "F", "name": "Three Paths on a Tree", "tags": ["dfs and similar", "dp", "greedy", "trees"], "rating": 2000, "frequency": 259, "__v": 0, "contestId": "1294"}, {"_id": "6202a61d32380906ee1b14bc", "index": "B", "name": "Glass Half Spilled", "tags": ["dp"], "rating": 2000, "frequency": 237, "__v": 0, "contestId": "1458"}, {"_id": "6202a62032380906ee1b196c", "index": "C", "name": "Bottom-Tier Reversals", "tags": ["constructive algorithms", "greedy"], "rating": 2000, "frequency": 234, "__v": 0, "contestId": "1558"}, {"_id": "6202a62132380906ee1b1ec6", "index": "B", "name": "Jzzhu and Cities", "tags": ["graphs", "greedy", "shortest paths"], "rating": 2000, "frequency": 216, "__v": 0, "contestId": "449"}, {"_id": "6202a62532380906ee1b353a", "index": "E", "name": "Subsequences (easy version)", "tags": ["dp", "graphs", "implementation", "shortest paths"], "rating": 2000, "frequency": 207, "__v": 0, "contestId": "1183"}, {"_id": "6202a62432380906ee1b2f1e", "index": "C", "name": "Match Points", "tags": ["binary search", "greedy", "sortings", "ternary search", "two pointers"], "rating": 2000, "frequency": 204, "__v": 0, "contestId": "1156"}, {"_id": "6202a62132380906ee1b1e8b", "index": "C", "name": "Ice Cave", "tags": ["dfs and similar"], "rating": 2000, "frequency": 195, "__v": 0, "contestId": "540"}, {"_id": "6202a62232380906ee1b2658", "index": "E", "name": "Compress Words", "tags": ["brute force", "hashing", "implementation", "string suffix structures", "strings"], "rating": 2000, "frequency": 194, "__v": 0, "contestId": "1200"}, {"_id": "6202a62632380906ee1b38ba", "index": "D", "name": "Red-Green Towers", "tags": ["dp"], "rating": 2000, "frequency": 193, "__v": 0, "contestId": "478"}, {"_id": "6202a61d32380906ee1b1475", "index": "C", "name": "World of Darkraft: Battle for Azathoth", "tags": ["brute force", "data structures", "sortings"], "rating": 2000, "frequency": 183, "__v": 0, "contestId": "1320"}, {"_id": "6202a62432380906ee1b2f33", "index": "E", "name": "Minimizing Difference", "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"], "rating": 2000, "frequency": 183, "__v": 0, "contestId": "1244"}, {"_id": "6202a61f32380906ee1b18a1", "index": "E", "name": "Yet Another Division Into Teams", "tags": ["dp", "greedy", "sortings"], "rating": 2000, "frequency": 180, "__v": 0, "contestId": "1256"}, {"_id": "6202a61f32380906ee1b1828", "index": "E", "name": "Messenger Simulator", "tags": ["data structures"], "rating": 2000, "frequency": 177, "__v": 0, "contestId": "1288"}, {"_id": "6202a61f32380906ee1b1913", "index": "C", "name": "Square Subsets", "tags": ["bitmasks", "combinatorics", "dp", "math"], "rating": 2000, "frequency": 177, "__v": 0, "contestId": "895"}, {"_id": "6202a62332380906ee1b27f4", "index": "C", "name": "Divide by Three", "tags": ["dp", "greedy", "math", "number theory"], "rating": 2000, "frequency": 176, "__v": 0, "contestId": "792"}, {"_id": "6202a62332380906ee1b28f8", "index": "C", "name": "Watto and Mechanism", "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "rating": 2000, "frequency": 175, "__v": 0, "contestId": "514"}, {"_id": "6202a62532380906ee1b34cf", "index": "D", "name": "Pair of Numbers", "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "rating": 2000, "frequency": 170, "__v": 0, "contestId": "359"}, {"_id": "6202a61f32380906ee1b18de", "index": "D", "name": "XOR-gun", "tags": ["bitmasks", "brute force", "constructive algorithms"], "rating": 2000, "frequency": 168, "__v": 0, "contestId": "1415"}, {"_id": "6202a62432380906ee1b2e5c", "index": "F", "name": "Equalizing Two Strings", "tags": ["constructive algorithms", "sortings", "strings"], "rating": 2000, "frequency": 166, "__v": 0, "contestId": "1256"}, {"_id": "6202a62432380906ee1b30ce", "index": "D", "name": "GCD Counting", "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"], "rating": 2000, "frequency": 163, "__v": 0, "contestId": "1101"}, {"_id": "6202a62532380906ee1b35c0", "index": "E", "name": "The Contest", "tags": ["data structures", "dp", "greedy"], "rating": 2000, "frequency": 162, "__v": 0, "contestId": "1257"}, {"_id": "6202a62632380906ee1b37ec", "index": "D", "name": "CGCDSSQ", "tags": ["brute force", "data structures", "math"], "rating": 2000, "frequency": 159, "__v": 0, "contestId": "475"}, {"_id": "6202a62032380906ee1b1ca2", "index": "C", "name": "Propagating tree", "tags": ["data structures", "dfs and similar", "trees"], "rating": 2000, "frequency": 157, "__v": 0, "contestId": "383"}, {"_id": "6202a61f32380906ee1b1897", "index": "E", "name": "Shortest Path", "tags": ["graphs", "shortest paths"], "rating": 2000, "frequency": 154, "__v": 0, "contestId": "59"}, {"_id": "6202a61f32380906ee1b18fb", "index": "B", "name": "Domino for Young", "tags": ["dp", "greedy", "math"], "rating": 2000, "frequency": 152, "__v": 0, "contestId": "1268"}, {"_id": "6202a62332380906ee1b2a36", "index": "D", "name": "R2D2 and Droid Army", "tags": ["binary search", "data structures", "two pointers"], "rating": 2000, "frequency": 151, "__v": 0, "contestId": "514"}, {"_id": "6202a62232380906ee1b2333", "index": "D", "name": "Buy a Ticket", "tags": ["data structures", "graphs", "shortest paths"], "rating": 2000, "frequency": 149, "__v": 0, "contestId": "938"}, {"_id": "6202a62732380906ee1b3bba", "index": "D", "name": "Count Good Substrings", "tags": ["math"], "rating": 2000, "frequency": 149, "__v": 0, "contestId": "451"}, {"_id": "6202a62232380906ee1b23d5", "index": "E", "name": "Counting Arrays", "tags": ["combinatorics", "dp", "math", "number theory"], "rating": 2000, "frequency": 142, "__v": 0, "contestId": "893"}, {"_id": "6202a62532380906ee1b3506", "index": "E", "name": "Increasing Frequency", "tags": ["binary search", "dp", "greedy"], "rating": 2000, "frequency": 141, "__v": 0, "contestId": "1082"}, {"_id": "6202a62032380906ee1b19a1", "index": "D", "name": "Balanced Playlist", "tags": ["binary search", "data structures", "implementation"], "rating": 2000, "frequency": 140, "__v": 0, "contestId": "1237"}, {"_id": "6202a62632380906ee1b3970", "index": "E", "name": "Bottom-Tier Reversals", "tags": ["constructive algorithms"], "rating": 2000, "frequency": 140, "__v": 0, "contestId": "1561"}]}