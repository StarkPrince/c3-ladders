{"message": "Ladder fetched", "data": [{"_id": "6202a61f32380906ee1b1845", "index": "B", "name": "Cobb", "tags": ["bitmasks", "brute force", "greedy", "math"], "rating": 1700, "frequency": 2419, "__v": 0, "contestId": "1554"}, {"_id": "6202a62032380906ee1b1bae", "index": "D", "name": "Another Problem About Dividing Numbers", "tags": ["constructive algorithms", "math", "number theory"], "rating": 1700, "frequency": 2219, "__v": 0, "contestId": "1538"}, {"_id": "6202a62232380906ee1b241c", "index": "C", "name": "Monsters And Spells", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "rating": 1700, "frequency": 2149, "__v": 0, "contestId": "1626"}, {"_id": "6202a61f32380906ee1b1859", "index": "D", "name": "Deleting Divisors", "tags": ["games", "math", "number theory"], "rating": 1700, "frequency": 2103, "__v": 0, "contestId": "1537"}, {"_id": "6202a62732380906ee1b4087", "index": "D", "name": "Peculiar Movie Preferences", "tags": ["greedy", "strings"], "rating": 1700, "frequency": 1897, "__v": 0, "contestId": "1629"}, {"_id": "6202a62232380906ee1b23ed", "index": "C", "name": "Manhattan Subarrays", "tags": ["brute force", "geometry", "greedy", "implementation"], "rating": 1700, "frequency": 1888, "__v": 0, "contestId": "1550"}, {"_id": "6202a62032380906ee1b1bca", "index": "C", "name": "Baby Ehab Partitions Again", "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "rating": 1700, "frequency": 1745, "__v": 0, "contestId": "1516"}, {"_id": "6202a62232380906ee1b243c", "index": "E", "name": "MEX and Increments", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "rating": 1700, "frequency": 1686, "__v": 0, "contestId": "1619"}, {"_id": "6202a62232380906ee1b23f2", "index": "D1", "name": "RPD and Rap Sheet (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "rating": 1700, "frequency": 1674, "__v": 0, "contestId": "1543"}, {"_id": "6202a61e32380906ee1b1715", "index": "D", "name": "Solve The Maze", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"], "rating": 1700, "frequency": 1593, "__v": 0, "contestId": "1365"}, {"_id": "6202a62032380906ee1b1c23", "index": "C", "name": "Number of Ways", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "rating": 1700, "frequency": 1593, "__v": 0, "contestId": "466"}, {"_id": "6202a62032380906ee1b1a19", "index": "C", "name": "Array Destruction", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "rating": 1700, "frequency": 1565, "__v": 0, "contestId": "1474"}, {"_id": "6202a61e32380906ee1b165e", "index": "C", "name": "Road Optimization", "tags": ["dp"], "rating": 1700, "frequency": 1553, "__v": 0, "contestId": "1625"}, {"_id": "6202a62232380906ee1b2446", "index": "E", "name": "Singers' Tour", "tags": ["constructive algorithms", "math"], "rating": 1700, "frequency": 1550, "__v": 0, "contestId": "1618"}, {"_id": "6202a61e32380906ee1b1667", "index": "C", "name": "Hidden Permutations", "tags": ["dfs and similar", "interactive", "math"], "rating": 1700, "frequency": 1543, "__v": 0, "contestId": "1621"}, {"_id": "6202a61e32380906ee1b15be", "index": "C", "name": "Moamen and XOR", "tags": ["bitmasks", "combinatorics", "dp", "math", "matrices"], "rating": 1700, "frequency": 1529, "__v": 0, "contestId": "1557"}, {"_id": "6202a62132380906ee1b1eb6", "index": "B", "name": "Hills And Valleys", "tags": ["brute force", "implementation"], "rating": 1700, "frequency": 1518, "__v": 0, "contestId": "1467"}, {"_id": "6202a61e32380906ee1b16a4", "index": "D", "name": "Training Session", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math"], "rating": 1700, "frequency": 1496, "__v": 0, "contestId": "1598"}, {"_id": "6202a61f32380906ee1b1835", "index": "C", "name": "Nezzar and Symmetric Array", "tags": ["implementation", "math", "sortings"], "rating": 1700, "frequency": 1345, "__v": 0, "contestId": "1478"}, {"_id": "6202a62132380906ee1b1e73", "index": "C", "name": "Floor and Mod", "tags": ["binary search", "brute force", "math", "number theory"], "rating": 1700, "frequency": 1326, "__v": 0, "contestId": "1485"}, {"_id": "6202a61c32380906ee1b13e5", "index": "D", "name": "AND, OR and square sum", "tags": ["bitmasks", "greedy", "math"], "rating": 1700, "frequency": 1312, "__v": 0, "contestId": "1368"}, {"_id": "6202a61e32380906ee1b1735", "index": "C", "name": "Mixing Water", "tags": ["binary search", "math"], "rating": 1700, "frequency": 1310, "__v": 0, "contestId": "1359"}, {"_id": "6202a62232380906ee1b23e5", "index": "D1", "name": "Domino (easy version)", "tags": ["constructive algorithms", "math"], "rating": 1700, "frequency": 1307, "__v": 0, "contestId": "1551"}, {"_id": "6202a62032380906ee1b1973", "index": "F", "name": "Spy-string", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"], "rating": 1700, "frequency": 1255, "__v": 0, "contestId": "1360"}, {"_id": "6202a62032380906ee1b1a22", "index": "D", "name": "Ceil Divisions", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "rating": 1700, "frequency": 1251, "__v": 0, "contestId": "1469"}, {"_id": "6202a62032380906ee1b1a6e", "index": "D", "name": "Circle Game", "tags": ["games", "geometry", "math"], "rating": 1700, "frequency": 1246, "__v": 0, "contestId": "1451"}, {"_id": "6202a61f32380906ee1b17a1", "index": "D", "name": "Constant Palindrome Sum", "tags": ["brute force", "data structures", "greedy", "two pointers"], "rating": 1700, "frequency": 1238, "__v": 0, "contestId": "1343"}, {"_id": "6202a61f32380906ee1b17be", "index": "C", "name": "Eugene and an array", "tags": ["binary search", "data structures", "implementation", "two pointers"], "rating": 1700, "frequency": 1238, "__v": 0, "contestId": "1333"}, {"_id": "6202a62232380906ee1b2458", "index": "E1", "name": "Escape The Maze (easy version)", "tags": ["dfs and similar", "greedy", "shortest paths", "trees", "two pointers"], "rating": 1700, "frequency": 1236, "__v": 0, "contestId": "1611"}, {"_id": "6202a62032380906ee1b1bfb", "index": "E1", "name": "Square-free division (easy version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "rating": 1700, "frequency": 1215, "__v": 0, "contestId": "1497"}, {"_id": "6202a62232380906ee1b246d", "index": "C", "name": "Bakry and Partitioning", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "rating": 1700, "frequency": 1210, "__v": 0, "contestId": "1592"}, {"_id": "6202a62032380906ee1b1b50", "index": "D", "name": "Program", "tags": ["data structures", "dp", "implementation", "strings"], "rating": 1700, "frequency": 1207, "__v": 0, "contestId": "1473"}, {"_id": "6202a62032380906ee1b1af8", "index": "C", "name": "Pinkie Pie Eats Patty-cakes", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "rating": 1700, "frequency": 1189, "__v": 0, "contestId": "1393"}, {"_id": "6202a61f32380906ee1b1932", "index": "C", "name": "Game Master", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"], "rating": 1700, "frequency": 1188, "__v": 0, "contestId": "1608"}, {"_id": "6202a62032380906ee1b1a14", "index": "D", "name": "Journey", "tags": ["dfs and similar", "dp", "dsu", "implementation"], "rating": 1700, "frequency": 1184, "__v": 0, "contestId": "1476"}, {"_id": "6202a62032380906ee1b1a28", "index": "E2", "name": "Close Tuples (hard version)", "tags": ["binary search", "combinatorics", "implementation", "math", "sortings", "two pointers"], "rating": 1700, "frequency": 1174, "__v": 0, "contestId": "1462"}, {"_id": "6202a62032380906ee1b1bd9", "index": "G", "name": "Short Task", "tags": ["brute force", "dp", "math", "number theory"], "rating": 1700, "frequency": 1153, "__v": 0, "contestId": "1512"}, {"_id": "6202a62532380906ee1b31f9", "index": "C", "name": "Searching Local Minimum", "tags": ["binary search", "interactive", "math", "ternary search"], "rating": 1700, "frequency": 1148, "__v": 0, "contestId": "1480"}, {"_id": "6202a61f32380906ee1b17aa", "index": "E", "name": "Sleeping Schedule", "tags": ["dp", "implementation"], "rating": 1700, "frequency": 1139, "__v": 0, "contestId": "1324"}, {"_id": "6202a62332380906ee1b26ed", "index": "D", "name": "Flowers", "tags": ["dp"], "rating": 1700, "frequency": 1138, "__v": 0, "contestId": "474"}, {"_id": "6202a61e32380906ee1b1644", "index": "C", "name": "Pekora and Trampoline", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "rating": 1700, "frequency": 1133, "__v": 0, "contestId": "1491"}, {"_id": "6202a61d32380906ee1b1465", "index": "D", "name": "Ehab the Xorcist", "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "rating": 1700, "frequency": 1122, "__v": 0, "contestId": "1325"}, {"_id": "6202a62032380906ee1b1b11", "index": "B", "name": "RPG Protagonist", "tags": ["brute force", "greedy", "math"], "rating": 1700, "frequency": 1115, "__v": 0, "contestId": "1400"}, {"_id": "6202a61d32380906ee1b1542", "index": "E1", "name": "Three Blocks Palindrome (easy version)", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "rating": 1700, "frequency": 1089, "__v": 0, "contestId": "1335"}, {"_id": "6202a61e32380906ee1b16ab", "index": "D", "name": "The Number of Imposters", "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"], "rating": 1700, "frequency": 1088, "__v": 0, "contestId": "1594"}, {"_id": "6202a61e32380906ee1b16b8", "index": "E2", "name": "Array Optimization by Deque", "tags": ["data structures", "greedy"], "rating": 1700, "frequency": 1080, "__v": 0, "contestId": "1579"}, {"_id": "6202a62032380906ee1b1963", "index": "C", "name": "Omkar and Determination", "tags": ["constructive algorithms", "dp", "greedy", "implementation", "two pointers"], "rating": 1700, "frequency": 1071, "__v": 0, "contestId": "1586"}, {"_id": "6202a62632380906ee1b3935", "index": "D", "name": "Xenia and Bit Operations", "tags": ["data structures", "trees"], "rating": 1700, "frequency": 1038, "__v": 0, "contestId": "339"}, {"_id": "6202a62232380906ee1b24a0", "index": "D1", "name": "Two Hundred Twenty One (easy version)", "tags": ["data structures", "dp", "math"], "rating": 1700, "frequency": 1017, "__v": 0, "contestId": "1562"}, {"_id": "6202a62032380906ee1b1ae0", "index": "D", "name": "String Deletion", "tags": ["binary search", "data structures", "greedy", "two pointers"], "rating": 1700, "frequency": 1003, "__v": 0, "contestId": "1430"}, {"_id": "6202a62232380906ee1b239b", "index": "E", "name": "Correct Placement", "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "rating": 1700, "frequency": 967, "__v": 0, "contestId": "1472"}, {"_id": "6202a62332380906ee1b2a93", "index": "F", "name": "Consecutive Subsequence", "tags": ["dp"], "rating": 1700, "frequency": 959, "__v": 0, "contestId": "977"}, {"_id": "6202a61d32380906ee1b1504", "index": "C", "name": "Bargain", "tags": ["combinatorics", "dp", "math"], "rating": 1700, "frequency": 935, "__v": 0, "contestId": "1422"}, {"_id": "6202a61f32380906ee1b190c", "index": "C", "name": "Link Cut Centroids", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "rating": 1700, "frequency": 909, "__v": 0, "contestId": "1406"}, {"_id": "6202a61d32380906ee1b1451", "index": "C", "name": "Ayoub's function", "tags": ["binary search", "combinatorics", "greedy", "math", "strings"], "rating": 1700, "frequency": 908, "__v": 0, "contestId": "1301"}, {"_id": "6202a61f32380906ee1b17cf", "index": "D", "name": "Walk on Matrix", "tags": ["bitmasks", "constructive algorithms", "math"], "rating": 1700, "frequency": 866, "__v": 0, "contestId": "1332"}, {"_id": "6202a61f32380906ee1b17f5", "index": "D", "name": "Count the Arrays", "tags": ["combinatorics", "math"], "rating": 1700, "frequency": 862, "__v": 0, "contestId": "1312"}, {"_id": "6202a62632380906ee1b3805", "index": "C2", "name": "Prefix Flip (Hard Version)", "tags": ["constructive algorithms", "data structures", "implementation", "strings"], "rating": 1700, "frequency": 861, "__v": 0, "contestId": "1382"}, {"_id": "6202a62632380906ee1b3875", "index": "D", "name": "Caesar's Legions", "tags": ["dp"], "rating": 1700, "frequency": 859, "__v": 0, "contestId": "118"}, {"_id": "6202a62532380906ee1b3212", "index": "D", "name": "Kavi on Pairing Duty", "tags": ["combinatorics", "dp", "math", "number theory"], "rating": 1700, "frequency": 849, "__v": 0, "contestId": "1529"}, {"_id": "6202a61c32380906ee1b13b3", "index": "D", "name": "Omkar and Bed Wars", "tags": ["dp", "greedy"], "rating": 1700, "frequency": 835, "__v": 0, "contestId": "1392"}, {"_id": "6202a62332380906ee1b2713", "index": "D1", "name": "Up the Strip (simplified version)", "tags": ["brute force", "data structures", "dp", "math", "number theory"], "rating": 1700, "frequency": 802, "__v": 0, "contestId": "1561"}, {"_id": "6202a62032380906ee1b1a41", "index": "C", "name": "Triangles", "tags": ["greedy", "implementation"], "rating": 1700, "frequency": 783, "__v": 0, "contestId": "1453"}, {"_id": "6202a62432380906ee1b2c44", "index": "B", "name": "Color the Fence", "tags": ["data structures", "dp", "greedy", "implementation"], "rating": 1700, "frequency": 760, "__v": 0, "contestId": "349"}, {"_id": "6202a61e32380906ee1b16b7", "index": "F", "name": "Array Stabilization (AND version)", "tags": ["brute force", "graphs", "math", "number theory", "shortest paths"], "rating": 1700, "frequency": 743, "__v": 0, "contestId": "1579"}, {"_id": "6202a62532380906ee1b324c", "index": "D", "name": "3-Coloring", "tags": ["constructive algorithms", "games", "graphs", "interactive"], "rating": 1700, "frequency": 690, "__v": 0, "contestId": "1504"}, {"_id": "6202a62632380906ee1b3965", "index": "C", "name": "String Transformation 1", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "rating": 1700, "frequency": 678, "__v": 0, "contestId": "1384"}, {"_id": "6202a62232380906ee1b2203", "index": "B", "name": "Password", "tags": ["binary search", "dp", "hashing", "string suffix structures", "strings"], "rating": 1700, "frequency": 658, "__v": 0, "contestId": "126"}, {"_id": "6202a62532380906ee1b31e6", "index": "C", "name": "George and Job", "tags": ["dp", "implementation"], "rating": 1700, "frequency": 656, "__v": 0, "contestId": "467"}, {"_id": "6202a61d32380906ee1b1440", "index": "B", "name": "Different Rules", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "rating": 1700, "frequency": 647, "__v": 0, "contestId": "1313"}, {"_id": "6202a62532380906ee1b3294", "index": "C", "name": "Peaceful Rooks", "tags": ["dfs and similar", "dsu", "greedy", "implementation"], "rating": 1700, "frequency": 640, "__v": 0, "contestId": "1465"}, {"_id": "6202a62232380906ee1b23c4", "index": "D", "name": "Valid BFS?", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "rating": 1700, "frequency": 631, "__v": 0, "contestId": "1037"}, {"_id": "6202a62432380906ee1b2ede", "index": "E", "name": "Cover it!", "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"], "rating": 1700, "frequency": 627, "__v": 0, "contestId": "1176"}, {"_id": "6202a62532380906ee1b31f2", "index": "D", "name": "Little Girl and Maximum XOR", "tags": ["bitmasks", "dp", "greedy", "implementation", "math"], "rating": 1700, "frequency": 602, "__v": 0, "contestId": "276"}, {"_id": "6202a62432380906ee1b2bf0", "index": "C", "name": "Palindrome Transformation", "tags": ["brute force", "greedy", "implementation"], "rating": 1700, "frequency": 599, "__v": 0, "contestId": "486"}, {"_id": "6202a62632380906ee1b376d", "index": "D", "name": "Xenia and Colorful Gems", "tags": ["binary search", "data structures", "implementation", "math", "sortings"], "rating": 1700, "frequency": 593, "__v": 0, "contestId": "1337"}, {"_id": "6202a62332380906ee1b28ab", "index": "F", "name": "Graph Without Long Directed Paths", "tags": ["dfs and similar", "graphs"], "rating": 1700, "frequency": 558, "__v": 0, "contestId": "1144"}, {"_id": "6202a61d32380906ee1b1583", "index": "D", "name": "Firecrackers", "tags": ["binary search", "sortings"], "rating": 1700, "frequency": 550, "__v": 0, "contestId": "1468"}, {"_id": "6202a62632380906ee1b3862", "index": "C", "name": "Checkposts", "tags": ["dfs and similar", "graphs", "two pointers"], "rating": 1700, "frequency": 534, "__v": 0, "contestId": "427"}, {"_id": "6202a62432380906ee1b301a", "index": "D", "name": "Johnny and Contribution", "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "sortings"], "rating": 1700, "frequency": 531, "__v": 0, "contestId": "1362"}, {"_id": "6202a62432380906ee1b2e4d", "index": "E", "name": "By Elevator or Stairs?", "tags": ["dp", "shortest paths"], "rating": 1700, "frequency": 501, "__v": 0, "contestId": "1249"}, {"_id": "6202a62332380906ee1b271a", "index": "D", "name": "Harmonious Graph", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "rating": 1700, "frequency": 499, "__v": 0, "contestId": "1253"}, {"_id": "6202a61c32380906ee1b13d5", "index": "D", "name": "Soldier and Number Game", "tags": ["constructive algorithms", "dp", "math", "number theory"], "rating": 1700, "frequency": 496, "__v": 0, "contestId": "546"}, {"_id": "6202a62432380906ee1b2cb7", "index": "B", "name": "Infinite Prefixes", "tags": ["math", "strings"], "rating": 1700, "frequency": 480, "__v": 0, "contestId": "1295"}, {"_id": "6202a62532380906ee1b3222", "index": "C", "name": "Multiplicity", "tags": ["data structures", "dp", "implementation", "math", "number theory"], "rating": 1700, "frequency": 473, "__v": 0, "contestId": "1061"}, {"_id": "6202a61d32380906ee1b1585", "index": "F", "name": "Full Turn", "tags": ["geometry", "hashing", "number theory"], "rating": 1700, "frequency": 459, "__v": 0, "contestId": "1468"}, {"_id": "6202a62332380906ee1b26e9", "index": "C", "name": "Berry Jam", "tags": ["data structures", "dp", "greedy", "implementation"], "rating": 1700, "frequency": 447, "__v": 0, "contestId": "1278"}, {"_id": "6202a62332380906ee1b2714", "index": "D", "name": "Beautiful Graph", "tags": ["dfs and similar", "graphs"], "rating": 1700, "frequency": 444, "__v": 0, "contestId": "1093"}, {"_id": "6202a61f32380906ee1b18b0", "index": "C", "name": "Infinite Fence", "tags": ["greedy", "math", "number theory"], "rating": 1700, "frequency": 436, "__v": 0, "contestId": "1260"}, {"_id": "6202a62232380906ee1b22dd", "index": "E", "name": "Minimum Array", "tags": ["binary search", "data structures", "greedy"], "rating": 1700, "frequency": 433, "__v": 0, "contestId": "1157"}, {"_id": "6202a62432380906ee1b2fb8", "index": "B", "name": "Greg and Graph", "tags": ["dp", "graphs", "shortest paths"], "rating": 1700, "frequency": 433, "__v": 0, "contestId": "295"}, {"_id": "6202a62432380906ee1b2ee6", "index": "D2", "name": "Remove the Substring (hard version)", "tags": ["binary search", "greedy", "implementation", "two pointers"], "rating": 1700, "frequency": 432, "__v": 0, "contestId": "1203"}, {"_id": "6202a62832380906ee1b42fe", "index": "C", "name": "Bear and Prime Numbers", "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"], "rating": 1700, "frequency": 429, "__v": 0, "contestId": "385"}, {"_id": "6202a62432380906ee1b304e", "index": "C", "name": "Primes and Multiplication", "tags": ["math", "number theory"], "rating": 1700, "frequency": 424, "__v": 0, "contestId": "1228"}, {"_id": "6202a61f32380906ee1b17ea", "index": "D", "name": "Cow and Snacks", "tags": ["dfs and similar", "dsu", "graphs"], "rating": 1700, "frequency": 423, "__v": 0, "contestId": "1209"}, {"_id": "6202a62432380906ee1b2fdb", "index": "C", "name": "Hacking Cypher", "tags": ["brute force", "math", "number theory", "strings"], "rating": 1700, "frequency": 420, "__v": 0, "contestId": "490"}, {"_id": "6202a61d32380906ee1b141b", "index": "B", "name": "Nastya and Scoreboard", "tags": ["bitmasks", "dp", "graphs", "greedy"], "rating": 1700, "frequency": 417, "__v": 0, "contestId": "1340"}, {"_id": "6202a61d32380906ee1b1425", "index": "B", "name": "Dreamoon Likes Sequences", "tags": ["bitmasks", "combinatorics", "math"], "rating": 1700, "frequency": 416, "__v": 0, "contestId": "1329"}, {"_id": "6202a62732380906ee1b3d72", "index": "C", "name": "Arithmetic Progression", "tags": ["implementation", "sortings"], "rating": 1700, "frequency": 399, "__v": 0, "contestId": "382"}, {"_id": "6202a62232380906ee1b22de", "index": "C2", "name": "Increasing Subsequence (hard version)", "tags": ["greedy"], "rating": 1700, "frequency": 394, "__v": 0, "contestId": "1157"}]}